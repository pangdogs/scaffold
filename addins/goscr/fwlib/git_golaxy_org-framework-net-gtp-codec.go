// Code generated by 'yaegi extract git.golaxy.org/framework/net/gtp/codec'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/framework/net/gtp"
	"git.golaxy.org/framework/net/gtp/codec"
	"git.golaxy.org/framework/utils/binaryutil"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/net/gtp/codec/codec"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ErrAuthenticate":       reflect.ValueOf(&codec.ErrAuthenticate).Elem(),
		"ErrCompress":           reflect.ValueOf(&codec.ErrCompress).Elem(),
		"ErrDecode":             reflect.ValueOf(&codec.ErrDecode).Elem(),
		"ErrEncode":             reflect.ValueOf(&codec.ErrEncode).Elem(),
		"ErrEncrypt":            reflect.ValueOf(&codec.ErrEncrypt).Elem(),
		"ErrInvalidMAC":         reflect.ValueOf(&codec.ErrInvalidMAC).Elem(),
		"ErrUnableToPeekLength": reflect.ValueOf(&codec.ErrUnableToPeekLength).Elem(),
		"NewAuthentication":     reflect.ValueOf(codec.NewAuthentication),
		"NewCompression":        reflect.ValueOf(codec.NewCompression),
		"NewDecoder":            reflect.ValueOf(codec.NewDecoder),
		"NewEncoder":            reflect.ValueOf(codec.NewEncoder),
		"NewEncryption":         reflect.ValueOf(codec.NewEncryption),

		// type definitions
		"Authentication":  reflect.ValueOf((*codec.Authentication)(nil)),
		"Compression":     reflect.ValueOf((*codec.Compression)(nil)),
		"Decoder":         reflect.ValueOf((*codec.Decoder)(nil)),
		"Encoder":         reflect.ValueOf((*codec.Encoder)(nil)),
		"Encryption":      reflect.ValueOf((*codec.Encryption)(nil)),
		"FetchNonce":      reflect.ValueOf((*codec.FetchNonce)(nil)),
		"IAuthentication": reflect.ValueOf((*codec.IAuthentication)(nil)),
		"ICompression":    reflect.ValueOf((*codec.ICompression)(nil)),
		"IEncryption":     reflect.ValueOf((*codec.IEncryption)(nil)),
		"IValidation":     reflect.ValueOf((*codec.IValidation)(nil)),

		// interface wrapper definitions
		"_IAuthentication": reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_codec_IAuthentication)(nil)),
		"_ICompression":    reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_codec_ICompression)(nil)),
		"_IEncryption":     reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_codec_IEncryption)(nil)),
		"_IValidation":     reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_codec_IValidation)(nil)),
	}
}

// _git_golaxy_org_framework_net_gtp_codec_IAuthentication is an interface wrapper for IAuthentication type
type _git_golaxy_org_framework_net_gtp_codec_IAuthentication struct {
	IValue          interface{}
	WAuth           func(msgId gtp.MsgId, flags gtp.Flags, msgBuf []byte) (dst []byte, err error)
	WSign           func(msgId gtp.MsgId, flags gtp.Flags, msgBuf []byte) (dst binaryutil.RecycleBytes, err error)
	WSizeOfAddition func(msgLen int) (int, error)
}

func (W _git_golaxy_org_framework_net_gtp_codec_IAuthentication) Auth(msgId gtp.MsgId, flags gtp.Flags, msgBuf []byte) (dst []byte, err error) {
	return W.WAuth(msgId, flags, msgBuf)
}
func (W _git_golaxy_org_framework_net_gtp_codec_IAuthentication) Sign(msgId gtp.MsgId, flags gtp.Flags, msgBuf []byte) (dst binaryutil.RecycleBytes, err error) {
	return W.WSign(msgId, flags, msgBuf)
}
func (W _git_golaxy_org_framework_net_gtp_codec_IAuthentication) SizeOfAddition(msgLen int) (int, error) {
	return W.WSizeOfAddition(msgLen)
}

// _git_golaxy_org_framework_net_gtp_codec_ICompression is an interface wrapper for ICompression type
type _git_golaxy_org_framework_net_gtp_codec_ICompression struct {
	IValue      interface{}
	WCompress   func(src []byte) (dst binaryutil.RecycleBytes, compressed bool, err error)
	WUncompress func(src []byte) (dst binaryutil.RecycleBytes, err error)
}

func (W _git_golaxy_org_framework_net_gtp_codec_ICompression) Compress(src []byte) (dst binaryutil.RecycleBytes, compressed bool, err error) {
	return W.WCompress(src)
}
func (W _git_golaxy_org_framework_net_gtp_codec_ICompression) Uncompress(src []byte) (dst binaryutil.RecycleBytes, err error) {
	return W.WUncompress(src)
}

// _git_golaxy_org_framework_net_gtp_codec_IEncryption is an interface wrapper for IEncryption type
type _git_golaxy_org_framework_net_gtp_codec_IEncryption struct {
	IValue          interface{}
	WSizeOfAddition func(msgLen int) (int, error)
	WTransforming   func(dst []byte, src []byte) (binaryutil.RecycleBytes, error)
}

func (W _git_golaxy_org_framework_net_gtp_codec_IEncryption) SizeOfAddition(msgLen int) (int, error) {
	return W.WSizeOfAddition(msgLen)
}
func (W _git_golaxy_org_framework_net_gtp_codec_IEncryption) Transforming(dst []byte, src []byte) (binaryutil.RecycleBytes, error) {
	return W.WTransforming(dst, src)
}

// _git_golaxy_org_framework_net_gtp_codec_IValidation is an interface wrapper for IValidation type
type _git_golaxy_org_framework_net_gtp_codec_IValidation struct {
	IValue    interface{}
	WValidate func(msgHead gtp.MsgHead, msgBuf []byte) error
}

func (W _git_golaxy_org_framework_net_gtp_codec_IValidation) Validate(msgHead gtp.MsgHead, msgBuf []byte) error {
	return W.WValidate(msgHead, msgBuf)
}
