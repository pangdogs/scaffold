// Code generated by 'yaegi extract git.golaxy.org/core/ec'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/core/ec"
	"git.golaxy.org/core/event"
	"git.golaxy.org/core/utils/async"
	"git.golaxy.org/core/utils/generic"
	"git.golaxy.org/core/utils/iface"
	"git.golaxy.org/core/utils/meta"
	"git.golaxy.org/core/utils/option"
	"git.golaxy.org/core/utils/uid"
	"reflect"
	"time"
)

func init() {
	Symbols["git.golaxy.org/core/ec/ec"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BindEventComponentDestroySelf":                  reflect.ValueOf(ec.BindEventComponentDestroySelf),
		"BindEventComponentEnableChanged":                reflect.ValueOf(ec.BindEventComponentEnableChanged),
		"BindEventComponentManagerAddComponents":         reflect.ValueOf(ec.BindEventComponentManagerAddComponents),
		"BindEventComponentManagerFirstTouchComponent":   reflect.ValueOf(ec.BindEventComponentManagerFirstTouchComponent),
		"BindEventComponentManagerRemoveComponent":       reflect.ValueOf(ec.BindEventComponentManagerRemoveComponent),
		"BindEventEntityDestroySelf":                     reflect.ValueOf(ec.BindEventEntityDestroySelf),
		"BindEventTreeNodeAddChild":                      reflect.ValueOf(ec.BindEventTreeNodeAddChild),
		"BindEventTreeNodeEnterParent":                   reflect.ValueOf(ec.BindEventTreeNodeEnterParent),
		"BindEventTreeNodeLeaveParent":                   reflect.ValueOf(ec.BindEventTreeNodeLeaveParent),
		"BindEventTreeNodeRemoveChild":                   reflect.ValueOf(ec.BindEventTreeNodeRemoveChild),
		"ComponentState_Alive":                           reflect.ValueOf(ec.ComponentState_Alive),
		"ComponentState_Attach":                          reflect.ValueOf(ec.ComponentState_Attach),
		"ComponentState_Awake":                           reflect.ValueOf(ec.ComponentState_Awake),
		"ComponentState_Birth":                           reflect.ValueOf(ec.ComponentState_Birth),
		"ComponentState_Death":                           reflect.ValueOf(ec.ComponentState_Death),
		"ComponentState_Destroyed":                       reflect.ValueOf(ec.ComponentState_Destroyed),
		"ComponentState_Detach":                          reflect.ValueOf(ec.ComponentState_Detach),
		"ComponentState_Disable":                         reflect.ValueOf(ec.ComponentState_Disable),
		"ComponentState_Enable":                          reflect.ValueOf(ec.ComponentState_Enable),
		"ComponentState_Idle":                            reflect.ValueOf(ec.ComponentState_Idle),
		"ComponentState_Shut":                            reflect.ValueOf(ec.ComponentState_Shut),
		"ComponentState_Start":                           reflect.ValueOf(ec.ComponentState_Start),
		"EntityState_Alive":                              reflect.ValueOf(ec.EntityState_Alive),
		"EntityState_Awake":                              reflect.ValueOf(ec.EntityState_Awake),
		"EntityState_Birth":                              reflect.ValueOf(ec.EntityState_Birth),
		"EntityState_Death":                              reflect.ValueOf(ec.EntityState_Death),
		"EntityState_Destroyed":                          reflect.ValueOf(ec.EntityState_Destroyed),
		"EntityState_Enter":                              reflect.ValueOf(ec.EntityState_Enter),
		"EntityState_Leave":                              reflect.ValueOf(ec.EntityState_Leave),
		"EntityState_Shut":                               reflect.ValueOf(ec.EntityState_Shut),
		"EntityState_Start":                              reflect.ValueOf(ec.EntityState_Start),
		"ErrEC":                                          reflect.ValueOf(&ec.ErrEC).Elem(),
		"EventComponentDestroySelfId":                    reflect.ValueOf(&ec.EventComponentDestroySelfId).Elem(),
		"EventComponentEnableChangedId":                  reflect.ValueOf(&ec.EventComponentEnableChangedId).Elem(),
		"EventComponentManagerAddComponentsId":           reflect.ValueOf(&ec.EventComponentManagerAddComponentsId).Elem(),
		"EventComponentManagerFirstTouchComponentId":     reflect.ValueOf(&ec.EventComponentManagerFirstTouchComponentId).Elem(),
		"EventComponentManagerRemoveComponentId":         reflect.ValueOf(&ec.EventComponentManagerRemoveComponentId).Elem(),
		"EventEntityDestroySelfId":                       reflect.ValueOf(&ec.EventEntityDestroySelfId).Elem(),
		"EventTreeNodeAddChildId":                        reflect.ValueOf(&ec.EventTreeNodeAddChildId).Elem(),
		"EventTreeNodeEnterParentId":                     reflect.ValueOf(&ec.EventTreeNodeEnterParentId).Elem(),
		"EventTreeNodeLeaveParentId":                     reflect.ValueOf(&ec.EventTreeNodeLeaveParentId).Elem(),
		"EventTreeNodeRemoveChildId":                     reflect.ValueOf(&ec.EventTreeNodeRemoveChildId).Elem(),
		"HandleEventComponentDestroySelf":                reflect.ValueOf(ec.HandleEventComponentDestroySelf),
		"HandleEventComponentEnableChanged":              reflect.ValueOf(ec.HandleEventComponentEnableChanged),
		"HandleEventComponentManagerAddComponents":       reflect.ValueOf(ec.HandleEventComponentManagerAddComponents),
		"HandleEventComponentManagerFirstTouchComponent": reflect.ValueOf(ec.HandleEventComponentManagerFirstTouchComponent),
		"HandleEventComponentManagerRemoveComponent":     reflect.ValueOf(ec.HandleEventComponentManagerRemoveComponent),
		"HandleEventEntityDestroySelf":                   reflect.ValueOf(ec.HandleEventEntityDestroySelf),
		"HandleEventTreeNodeAddChild":                    reflect.ValueOf(ec.HandleEventTreeNodeAddChild),
		"HandleEventTreeNodeEnterParent":                 reflect.ValueOf(ec.HandleEventTreeNodeEnterParent),
		"HandleEventTreeNodeLeaveParent":                 reflect.ValueOf(ec.HandleEventTreeNodeLeaveParent),
		"HandleEventTreeNodeRemoveChild":                 reflect.ValueOf(ec.HandleEventTreeNodeRemoveChild),
		"NewEntity":                                      reflect.ValueOf(ec.NewEntity),
		"Scope_Global":                                   reflect.ValueOf(ec.Scope_Global),
		"Scope_Local":                                    reflect.ValueOf(ec.Scope_Local),
		"TreeNodeState_Attached":                         reflect.ValueOf(ec.TreeNodeState_Attached),
		"TreeNodeState_Attaching":                        reflect.ValueOf(ec.TreeNodeState_Attaching),
		"TreeNodeState_Detaching":                        reflect.ValueOf(ec.TreeNodeState_Detaching),
		"TreeNodeState_Freedom":                          reflect.ValueOf(ec.TreeNodeState_Freedom),
		"UnsafeComponent":                                reflect.ValueOf(ec.UnsafeComponent),
		"UnsafeConcurrentEntity":                         reflect.ValueOf(ec.UnsafeConcurrentEntity),
		"UnsafeEntity":                                   reflect.ValueOf(ec.UnsafeEntity),
		"UnsafeNewEntity":                                reflect.ValueOf(ec.UnsafeNewEntity),
		"With":                                           reflect.ValueOf(&ec.With).Elem(),

		// type definitions
		"BuiltinComponent":                                reflect.ValueOf((*ec.BuiltinComponent)(nil)),
		"Component":                                       reflect.ValueOf((*ec.Component)(nil)),
		"ComponentBehavior":                               reflect.ValueOf((*ec.ComponentBehavior)(nil)),
		"ComponentPT":                                     reflect.ValueOf((*ec.ComponentPT)(nil)),
		"ComponentState":                                  reflect.ValueOf((*ec.ComponentState)(nil)),
		"ConcurrentEntity":                                reflect.ValueOf((*ec.ConcurrentEntity)(nil)),
		"Entity":                                          reflect.ValueOf((*ec.Entity)(nil)),
		"EntityBehavior":                                  reflect.ValueOf((*ec.EntityBehavior)(nil)),
		"EntityOptions":                                   reflect.ValueOf((*ec.EntityOptions)(nil)),
		"EntityPT":                                        reflect.ValueOf((*ec.EntityPT)(nil)),
		"EntityState":                                     reflect.ValueOf((*ec.EntityState)(nil)),
		"EventComponentDestroySelf":                       reflect.ValueOf((*ec.EventComponentDestroySelf)(nil)),
		"EventComponentDestroySelfHandler":                reflect.ValueOf((*ec.EventComponentDestroySelfHandler)(nil)),
		"EventComponentEnableChanged":                     reflect.ValueOf((*ec.EventComponentEnableChanged)(nil)),
		"EventComponentEnableChangedHandler":              reflect.ValueOf((*ec.EventComponentEnableChangedHandler)(nil)),
		"EventComponentManagerAddComponents":              reflect.ValueOf((*ec.EventComponentManagerAddComponents)(nil)),
		"EventComponentManagerAddComponentsHandler":       reflect.ValueOf((*ec.EventComponentManagerAddComponentsHandler)(nil)),
		"EventComponentManagerFirstTouchComponent":        reflect.ValueOf((*ec.EventComponentManagerFirstTouchComponent)(nil)),
		"EventComponentManagerFirstTouchComponentHandler": reflect.ValueOf((*ec.EventComponentManagerFirstTouchComponentHandler)(nil)),
		"EventComponentManagerRemoveComponent":            reflect.ValueOf((*ec.EventComponentManagerRemoveComponent)(nil)),
		"EventComponentManagerRemoveComponentHandler":     reflect.ValueOf((*ec.EventComponentManagerRemoveComponentHandler)(nil)),
		"EventEntityDestroySelf":                          reflect.ValueOf((*ec.EventEntityDestroySelf)(nil)),
		"EventEntityDestroySelfHandler":                   reflect.ValueOf((*ec.EventEntityDestroySelfHandler)(nil)),
		"EventTreeNodeAddChild":                           reflect.ValueOf((*ec.EventTreeNodeAddChild)(nil)),
		"EventTreeNodeAddChildHandler":                    reflect.ValueOf((*ec.EventTreeNodeAddChildHandler)(nil)),
		"EventTreeNodeEnterParent":                        reflect.ValueOf((*ec.EventTreeNodeEnterParent)(nil)),
		"EventTreeNodeEnterParentHandler":                 reflect.ValueOf((*ec.EventTreeNodeEnterParentHandler)(nil)),
		"EventTreeNodeLeaveParent":                        reflect.ValueOf((*ec.EventTreeNodeLeaveParent)(nil)),
		"EventTreeNodeLeaveParentHandler":                 reflect.ValueOf((*ec.EventTreeNodeLeaveParentHandler)(nil)),
		"EventTreeNodeRemoveChild":                        reflect.ValueOf((*ec.EventTreeNodeRemoveChild)(nil)),
		"EventTreeNodeRemoveChildHandler":                 reflect.ValueOf((*ec.EventTreeNodeRemoveChildHandler)(nil)),
		"IComponentEventTab":                              reflect.ValueOf((*ec.IComponentEventTab)(nil)),
		"IEntityComponentManagerEventTab":                 reflect.ValueOf((*ec.IEntityComponentManagerEventTab)(nil)),
		"IEntityEventTab":                                 reflect.ValueOf((*ec.IEntityEventTab)(nil)),
		"IEntityTreeNodeEventTab":                         reflect.ValueOf((*ec.IEntityTreeNodeEventTab)(nil)),
		"Scope":                                           reflect.ValueOf((*ec.Scope)(nil)),
		"TreeNodeState":                                   reflect.ValueOf((*ec.TreeNodeState)(nil)),

		// interface wrapper definitions
		"_Component":                                reflect.ValueOf((*_git_golaxy_org_core_ec_Component)(nil)),
		"_ComponentPT":                              reflect.ValueOf((*_git_golaxy_org_core_ec_ComponentPT)(nil)),
		"_ConcurrentEntity":                         reflect.ValueOf((*_git_golaxy_org_core_ec_ConcurrentEntity)(nil)),
		"_Entity":                                   reflect.ValueOf((*_git_golaxy_org_core_ec_Entity)(nil)),
		"_EntityPT":                                 reflect.ValueOf((*_git_golaxy_org_core_ec_EntityPT)(nil)),
		"_EventComponentDestroySelf":                reflect.ValueOf((*_git_golaxy_org_core_ec_EventComponentDestroySelf)(nil)),
		"_EventComponentEnableChanged":              reflect.ValueOf((*_git_golaxy_org_core_ec_EventComponentEnableChanged)(nil)),
		"_EventComponentManagerAddComponents":       reflect.ValueOf((*_git_golaxy_org_core_ec_EventComponentManagerAddComponents)(nil)),
		"_EventComponentManagerFirstTouchComponent": reflect.ValueOf((*_git_golaxy_org_core_ec_EventComponentManagerFirstTouchComponent)(nil)),
		"_EventComponentManagerRemoveComponent":     reflect.ValueOf((*_git_golaxy_org_core_ec_EventComponentManagerRemoveComponent)(nil)),
		"_EventEntityDestroySelf":                   reflect.ValueOf((*_git_golaxy_org_core_ec_EventEntityDestroySelf)(nil)),
		"_EventTreeNodeAddChild":                    reflect.ValueOf((*_git_golaxy_org_core_ec_EventTreeNodeAddChild)(nil)),
		"_EventTreeNodeEnterParent":                 reflect.ValueOf((*_git_golaxy_org_core_ec_EventTreeNodeEnterParent)(nil)),
		"_EventTreeNodeLeaveParent":                 reflect.ValueOf((*_git_golaxy_org_core_ec_EventTreeNodeLeaveParent)(nil)),
		"_EventTreeNodeRemoveChild":                 reflect.ValueOf((*_git_golaxy_org_core_ec_EventTreeNodeRemoveChild)(nil)),
		"_IComponentEventTab":                       reflect.ValueOf((*_git_golaxy_org_core_ec_IComponentEventTab)(nil)),
		"_IEntityComponentManagerEventTab":          reflect.ValueOf((*_git_golaxy_org_core_ec_IEntityComponentManagerEventTab)(nil)),
		"_IEntityEventTab":                          reflect.ValueOf((*_git_golaxy_org_core_ec_IEntityEventTab)(nil)),
		"_IEntityTreeNodeEventTab":                  reflect.ValueOf((*_git_golaxy_org_core_ec_IEntityTreeNodeEventTab)(nil)),
	}
}

// _git_golaxy_org_core_ec_Component is an interface wrapper for Component type
type _git_golaxy_org_core_ec_Component struct {
	IValue                       interface{}
	WDeadline                    func() (deadline time.Time, ok bool)
	WDestroySelf                 func()
	WDone                        func() <-chan struct{}
	WErr                         func() error
	WEventComponentDestroySelf   func() event.IEvent
	WEventComponentEnableChanged func() event.IEvent
	WGetBuiltin                  func() ec.BuiltinComponent
	WGetConcurrentContext        func() iface.Cache
	WGetCurrentContext           func() iface.Cache
	WGetEnable                   func() bool
	WGetEntity                   func() ec.Entity
	WGetId                       func() uid.Id
	WGetName                     func() string
	WGetReflected                func() reflect.Value
	WGetRemovable                func() bool
	WGetState                    func() ec.ComponentState
	WManagedAddHooks             func(hooks ...event.Hook)
	WManagedAddTagHooks          func(tag string, hooks ...event.Hook)
	WManagedCleanTagHooks        func(tag string)
	WManagedGetTagHooks          func(tag string) []event.Hook
	WSetEnable                   func(b bool)
	WString                      func() string
	WTerminated                  func() async.AsyncRet
	WValue                       func(key any) any
}

func (W _git_golaxy_org_core_ec_Component) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _git_golaxy_org_core_ec_Component) DestroySelf()          { W.WDestroySelf() }
func (W _git_golaxy_org_core_ec_Component) Done() <-chan struct{} { return W.WDone() }
func (W _git_golaxy_org_core_ec_Component) Err() error            { return W.WErr() }
func (W _git_golaxy_org_core_ec_Component) EventComponentDestroySelf() event.IEvent {
	return W.WEventComponentDestroySelf()
}
func (W _git_golaxy_org_core_ec_Component) EventComponentEnableChanged() event.IEvent {
	return W.WEventComponentEnableChanged()
}
func (W _git_golaxy_org_core_ec_Component) GetBuiltin() ec.BuiltinComponent { return W.WGetBuiltin() }
func (W _git_golaxy_org_core_ec_Component) GetConcurrentContext() iface.Cache {
	return W.WGetConcurrentContext()
}
func (W _git_golaxy_org_core_ec_Component) GetCurrentContext() iface.Cache {
	return W.WGetCurrentContext()
}
func (W _git_golaxy_org_core_ec_Component) GetEnable() bool             { return W.WGetEnable() }
func (W _git_golaxy_org_core_ec_Component) GetEntity() ec.Entity        { return W.WGetEntity() }
func (W _git_golaxy_org_core_ec_Component) GetId() uid.Id               { return W.WGetId() }
func (W _git_golaxy_org_core_ec_Component) GetName() string             { return W.WGetName() }
func (W _git_golaxy_org_core_ec_Component) GetReflected() reflect.Value { return W.WGetReflected() }
func (W _git_golaxy_org_core_ec_Component) GetRemovable() bool          { return W.WGetRemovable() }
func (W _git_golaxy_org_core_ec_Component) GetState() ec.ComponentState { return W.WGetState() }
func (W _git_golaxy_org_core_ec_Component) ManagedAddHooks(hooks ...event.Hook) {
	W.WManagedAddHooks(hooks...)
}
func (W _git_golaxy_org_core_ec_Component) ManagedAddTagHooks(tag string, hooks ...event.Hook) {
	W.WManagedAddTagHooks(tag, hooks...)
}
func (W _git_golaxy_org_core_ec_Component) ManagedCleanTagHooks(tag string) {
	W.WManagedCleanTagHooks(tag)
}
func (W _git_golaxy_org_core_ec_Component) ManagedGetTagHooks(tag string) []event.Hook {
	return W.WManagedGetTagHooks(tag)
}
func (W _git_golaxy_org_core_ec_Component) SetEnable(b bool) { W.WSetEnable(b) }
func (W _git_golaxy_org_core_ec_Component) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _git_golaxy_org_core_ec_Component) Terminated() async.AsyncRet { return W.WTerminated() }
func (W _git_golaxy_org_core_ec_Component) Value(key any) any          { return W.WValue(key) }

// _git_golaxy_org_core_ec_ComponentPT is an interface wrapper for ComponentPT type
type _git_golaxy_org_core_ec_ComponentPT struct {
	IValue      interface{}
	WConstruct  func() ec.Component
	WInstanceRT func() reflect.Type
	WPrototype  func() string
}

func (W _git_golaxy_org_core_ec_ComponentPT) Construct() ec.Component  { return W.WConstruct() }
func (W _git_golaxy_org_core_ec_ComponentPT) InstanceRT() reflect.Type { return W.WInstanceRT() }
func (W _git_golaxy_org_core_ec_ComponentPT) Prototype() string        { return W.WPrototype() }

// _git_golaxy_org_core_ec_ConcurrentEntity is an interface wrapper for ConcurrentEntity type
type _git_golaxy_org_core_ec_ConcurrentEntity struct {
	IValue                interface{}
	WDeadline             func() (deadline time.Time, ok bool)
	WDone                 func() <-chan struct{}
	WErr                  func() error
	WGetConcurrentContext func() iface.Cache
	WGetId                func() uid.Id
	WGetPT                func() ec.EntityPT
	WString               func() string
	WTerminated           func() async.AsyncRet
	WValue                func(key any) any
}

func (W _git_golaxy_org_core_ec_ConcurrentEntity) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _git_golaxy_org_core_ec_ConcurrentEntity) Done() <-chan struct{} { return W.WDone() }
func (W _git_golaxy_org_core_ec_ConcurrentEntity) Err() error            { return W.WErr() }
func (W _git_golaxy_org_core_ec_ConcurrentEntity) GetConcurrentContext() iface.Cache {
	return W.WGetConcurrentContext()
}
func (W _git_golaxy_org_core_ec_ConcurrentEntity) GetId() uid.Id      { return W.WGetId() }
func (W _git_golaxy_org_core_ec_ConcurrentEntity) GetPT() ec.EntityPT { return W.WGetPT() }
func (W _git_golaxy_org_core_ec_ConcurrentEntity) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _git_golaxy_org_core_ec_ConcurrentEntity) Terminated() async.AsyncRet { return W.WTerminated() }
func (W _git_golaxy_org_core_ec_ConcurrentEntity) Value(key any) any          { return W.WValue(key) }

// _git_golaxy_org_core_ec_Entity is an interface wrapper for Entity type
type _git_golaxy_org_core_ec_Entity struct {
	IValue                                    interface{}
	WAddComponent                             func(name string, components ...ec.Component) error
	WContainsComponent                        func(name string) bool
	WContainsComponentById                    func(id uid.Id) bool
	WContainsComponentByPT                    func(prototype string) bool
	WCountComponents                          func() int
	WDeadline                                 func() (deadline time.Time, ok bool)
	WDestroySelf                              func()
	WDone                                     func() <-chan struct{}
	WErr                                      func() error
	WEventComponentManagerAddComponents       func() event.IEvent
	WEventComponentManagerFirstTouchComponent func() event.IEvent
	WEventComponentManagerRemoveComponent     func() event.IEvent
	WEventEntityDestroySelf                   func() event.IEvent
	WEventTreeNodeAddChild                    func() event.IEvent
	WEventTreeNodeEnterParent                 func() event.IEvent
	WEventTreeNodeLeaveParent                 func() event.IEvent
	WEventTreeNodeRemoveChild                 func() event.IEvent
	WFilterComponents                         func(fun generic.Func1[ec.Component, bool]) []ec.Component
	WGetComponent                             func(name string) ec.Component
	WGetComponentById                         func(id uid.Id) ec.Component
	WGetComponentByPT                         func(prototype string) ec.Component
	WGetComponents                            func() []ec.Component
	WGetConcurrentContext                     func() iface.Cache
	WGetCurrentContext                        func() iface.Cache
	WGetId                                    func() uid.Id
	WGetInstanceFaceCache                     func() iface.Cache
	WGetMeta                                  func() meta.Meta
	WGetPT                                    func() ec.EntityPT
	WGetReflected                             func() reflect.Value
	WGetScope                                 func() ec.Scope
	WGetState                                 func() ec.EntityState
	WGetTreeNodeParent                        func() (ec.Entity, bool)
	WGetTreeNodeState                         func() ec.TreeNodeState
	WManagedAddHooks                          func(hooks ...event.Hook)
	WManagedAddTagHooks                       func(tag string, hooks ...event.Hook)
	WManagedCleanTagHooks                     func(tag string)
	WManagedGetTagHooks                       func(tag string) []event.Hook
	WRangeComponents                          func(fun generic.Func1[ec.Component, bool])
	WRemoveComponent                          func(name string)
	WRemoveComponentById                      func(id uid.Id)
	WReversedRangeComponents                  func(fun generic.Func1[ec.Component, bool])
	WString                                   func() string
	WTerminated                               func() async.AsyncRet
	WValue                                    func(key any) any
}

func (W _git_golaxy_org_core_ec_Entity) AddComponent(name string, components ...ec.Component) error {
	return W.WAddComponent(name, components...)
}
func (W _git_golaxy_org_core_ec_Entity) ContainsComponent(name string) bool {
	return W.WContainsComponent(name)
}
func (W _git_golaxy_org_core_ec_Entity) ContainsComponentById(id uid.Id) bool {
	return W.WContainsComponentById(id)
}
func (W _git_golaxy_org_core_ec_Entity) ContainsComponentByPT(prototype string) bool {
	return W.WContainsComponentByPT(prototype)
}
func (W _git_golaxy_org_core_ec_Entity) CountComponents() int { return W.WCountComponents() }
func (W _git_golaxy_org_core_ec_Entity) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _git_golaxy_org_core_ec_Entity) DestroySelf()          { W.WDestroySelf() }
func (W _git_golaxy_org_core_ec_Entity) Done() <-chan struct{} { return W.WDone() }
func (W _git_golaxy_org_core_ec_Entity) Err() error            { return W.WErr() }
func (W _git_golaxy_org_core_ec_Entity) EventComponentManagerAddComponents() event.IEvent {
	return W.WEventComponentManagerAddComponents()
}
func (W _git_golaxy_org_core_ec_Entity) EventComponentManagerFirstTouchComponent() event.IEvent {
	return W.WEventComponentManagerFirstTouchComponent()
}
func (W _git_golaxy_org_core_ec_Entity) EventComponentManagerRemoveComponent() event.IEvent {
	return W.WEventComponentManagerRemoveComponent()
}
func (W _git_golaxy_org_core_ec_Entity) EventEntityDestroySelf() event.IEvent {
	return W.WEventEntityDestroySelf()
}
func (W _git_golaxy_org_core_ec_Entity) EventTreeNodeAddChild() event.IEvent {
	return W.WEventTreeNodeAddChild()
}
func (W _git_golaxy_org_core_ec_Entity) EventTreeNodeEnterParent() event.IEvent {
	return W.WEventTreeNodeEnterParent()
}
func (W _git_golaxy_org_core_ec_Entity) EventTreeNodeLeaveParent() event.IEvent {
	return W.WEventTreeNodeLeaveParent()
}
func (W _git_golaxy_org_core_ec_Entity) EventTreeNodeRemoveChild() event.IEvent {
	return W.WEventTreeNodeRemoveChild()
}
func (W _git_golaxy_org_core_ec_Entity) FilterComponents(fun generic.Func1[ec.Component, bool]) []ec.Component {
	return W.WFilterComponents(fun)
}
func (W _git_golaxy_org_core_ec_Entity) GetComponent(name string) ec.Component {
	return W.WGetComponent(name)
}
func (W _git_golaxy_org_core_ec_Entity) GetComponentById(id uid.Id) ec.Component {
	return W.WGetComponentById(id)
}
func (W _git_golaxy_org_core_ec_Entity) GetComponentByPT(prototype string) ec.Component {
	return W.WGetComponentByPT(prototype)
}
func (W _git_golaxy_org_core_ec_Entity) GetComponents() []ec.Component { return W.WGetComponents() }
func (W _git_golaxy_org_core_ec_Entity) GetConcurrentContext() iface.Cache {
	return W.WGetConcurrentContext()
}
func (W _git_golaxy_org_core_ec_Entity) GetCurrentContext() iface.Cache {
	return W.WGetCurrentContext()
}
func (W _git_golaxy_org_core_ec_Entity) GetId() uid.Id { return W.WGetId() }
func (W _git_golaxy_org_core_ec_Entity) GetInstanceFaceCache() iface.Cache {
	return W.WGetInstanceFaceCache()
}
func (W _git_golaxy_org_core_ec_Entity) GetMeta() meta.Meta          { return W.WGetMeta() }
func (W _git_golaxy_org_core_ec_Entity) GetPT() ec.EntityPT          { return W.WGetPT() }
func (W _git_golaxy_org_core_ec_Entity) GetReflected() reflect.Value { return W.WGetReflected() }
func (W _git_golaxy_org_core_ec_Entity) GetScope() ec.Scope          { return W.WGetScope() }
func (W _git_golaxy_org_core_ec_Entity) GetState() ec.EntityState    { return W.WGetState() }
func (W _git_golaxy_org_core_ec_Entity) GetTreeNodeParent() (ec.Entity, bool) {
	return W.WGetTreeNodeParent()
}
func (W _git_golaxy_org_core_ec_Entity) GetTreeNodeState() ec.TreeNodeState {
	return W.WGetTreeNodeState()
}
func (W _git_golaxy_org_core_ec_Entity) ManagedAddHooks(hooks ...event.Hook) {
	W.WManagedAddHooks(hooks...)
}
func (W _git_golaxy_org_core_ec_Entity) ManagedAddTagHooks(tag string, hooks ...event.Hook) {
	W.WManagedAddTagHooks(tag, hooks...)
}
func (W _git_golaxy_org_core_ec_Entity) ManagedCleanTagHooks(tag string) {
	W.WManagedCleanTagHooks(tag)
}
func (W _git_golaxy_org_core_ec_Entity) ManagedGetTagHooks(tag string) []event.Hook {
	return W.WManagedGetTagHooks(tag)
}
func (W _git_golaxy_org_core_ec_Entity) RangeComponents(fun generic.Func1[ec.Component, bool]) {
	W.WRangeComponents(fun)
}
func (W _git_golaxy_org_core_ec_Entity) RemoveComponent(name string)   { W.WRemoveComponent(name) }
func (W _git_golaxy_org_core_ec_Entity) RemoveComponentById(id uid.Id) { W.WRemoveComponentById(id) }
func (W _git_golaxy_org_core_ec_Entity) ReversedRangeComponents(fun generic.Func1[ec.Component, bool]) {
	W.WReversedRangeComponents(fun)
}
func (W _git_golaxy_org_core_ec_Entity) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _git_golaxy_org_core_ec_Entity) Terminated() async.AsyncRet { return W.WTerminated() }
func (W _git_golaxy_org_core_ec_Entity) Value(key any) any          { return W.WValue(key) }

// _git_golaxy_org_core_ec_EntityPT is an interface wrapper for EntityPT type
type _git_golaxy_org_core_ec_EntityPT struct {
	IValue                      interface{}
	WComponent                  func(idx int) ec.BuiltinComponent
	WComponentAwakeOnFirstTouch func() *bool
	WComponentNameIndexing      func() *bool
	WComponentUniqueID          func() *bool
	WComponents                 func() []ec.BuiltinComponent
	WConstruct                  func(settings ...option.Setting[ec.EntityOptions]) ec.Entity
	WCountComponents            func() int
	WExtra                      func() generic.SliceMap[string, any]
	WInstanceRT                 func() reflect.Type
	WPrototype                  func() string
	WScope                      func() *ec.Scope
}

func (W _git_golaxy_org_core_ec_EntityPT) Component(idx int) ec.BuiltinComponent {
	return W.WComponent(idx)
}
func (W _git_golaxy_org_core_ec_EntityPT) ComponentAwakeOnFirstTouch() *bool {
	return W.WComponentAwakeOnFirstTouch()
}
func (W _git_golaxy_org_core_ec_EntityPT) ComponentNameIndexing() *bool {
	return W.WComponentNameIndexing()
}
func (W _git_golaxy_org_core_ec_EntityPT) ComponentUniqueID() *bool          { return W.WComponentUniqueID() }
func (W _git_golaxy_org_core_ec_EntityPT) Components() []ec.BuiltinComponent { return W.WComponents() }
func (W _git_golaxy_org_core_ec_EntityPT) Construct(settings ...option.Setting[ec.EntityOptions]) ec.Entity {
	return W.WConstruct(settings...)
}
func (W _git_golaxy_org_core_ec_EntityPT) CountComponents() int                 { return W.WCountComponents() }
func (W _git_golaxy_org_core_ec_EntityPT) Extra() generic.SliceMap[string, any] { return W.WExtra() }
func (W _git_golaxy_org_core_ec_EntityPT) InstanceRT() reflect.Type             { return W.WInstanceRT() }
func (W _git_golaxy_org_core_ec_EntityPT) Prototype() string                    { return W.WPrototype() }
func (W _git_golaxy_org_core_ec_EntityPT) Scope() *ec.Scope                     { return W.WScope() }

// _git_golaxy_org_core_ec_EventComponentDestroySelf is an interface wrapper for EventComponentDestroySelf type
type _git_golaxy_org_core_ec_EventComponentDestroySelf struct {
	IValue                  interface{}
	WOnComponentDestroySelf func(comp ec.Component)
}

func (W _git_golaxy_org_core_ec_EventComponentDestroySelf) OnComponentDestroySelf(comp ec.Component) {
	W.WOnComponentDestroySelf(comp)
}

// _git_golaxy_org_core_ec_EventComponentEnableChanged is an interface wrapper for EventComponentEnableChanged type
type _git_golaxy_org_core_ec_EventComponentEnableChanged struct {
	IValue                    interface{}
	WOnComponentEnableChanged func(comp ec.Component, enable bool)
}

func (W _git_golaxy_org_core_ec_EventComponentEnableChanged) OnComponentEnableChanged(comp ec.Component, enable bool) {
	W.WOnComponentEnableChanged(comp, enable)
}

// _git_golaxy_org_core_ec_EventComponentManagerAddComponents is an interface wrapper for EventComponentManagerAddComponents type
type _git_golaxy_org_core_ec_EventComponentManagerAddComponents struct {
	IValue                           interface{}
	WOnComponentManagerAddComponents func(entity ec.Entity, components []ec.Component)
}

func (W _git_golaxy_org_core_ec_EventComponentManagerAddComponents) OnComponentManagerAddComponents(entity ec.Entity, components []ec.Component) {
	W.WOnComponentManagerAddComponents(entity, components)
}

// _git_golaxy_org_core_ec_EventComponentManagerFirstTouchComponent is an interface wrapper for EventComponentManagerFirstTouchComponent type
type _git_golaxy_org_core_ec_EventComponentManagerFirstTouchComponent struct {
	IValue                                 interface{}
	WOnComponentManagerFirstTouchComponent func(entity ec.Entity, component ec.Component)
}

func (W _git_golaxy_org_core_ec_EventComponentManagerFirstTouchComponent) OnComponentManagerFirstTouchComponent(entity ec.Entity, component ec.Component) {
	W.WOnComponentManagerFirstTouchComponent(entity, component)
}

// _git_golaxy_org_core_ec_EventComponentManagerRemoveComponent is an interface wrapper for EventComponentManagerRemoveComponent type
type _git_golaxy_org_core_ec_EventComponentManagerRemoveComponent struct {
	IValue                             interface{}
	WOnComponentManagerRemoveComponent func(entity ec.Entity, component ec.Component)
}

func (W _git_golaxy_org_core_ec_EventComponentManagerRemoveComponent) OnComponentManagerRemoveComponent(entity ec.Entity, component ec.Component) {
	W.WOnComponentManagerRemoveComponent(entity, component)
}

// _git_golaxy_org_core_ec_EventEntityDestroySelf is an interface wrapper for EventEntityDestroySelf type
type _git_golaxy_org_core_ec_EventEntityDestroySelf struct {
	IValue               interface{}
	WOnEntityDestroySelf func(entity ec.Entity)
}

func (W _git_golaxy_org_core_ec_EventEntityDestroySelf) OnEntityDestroySelf(entity ec.Entity) {
	W.WOnEntityDestroySelf(entity)
}

// _git_golaxy_org_core_ec_EventTreeNodeAddChild is an interface wrapper for EventTreeNodeAddChild type
type _git_golaxy_org_core_ec_EventTreeNodeAddChild struct {
	IValue              interface{}
	WOnTreeNodeAddChild func(self ec.Entity, child ec.Entity)
}

func (W _git_golaxy_org_core_ec_EventTreeNodeAddChild) OnTreeNodeAddChild(self ec.Entity, child ec.Entity) {
	W.WOnTreeNodeAddChild(self, child)
}

// _git_golaxy_org_core_ec_EventTreeNodeEnterParent is an interface wrapper for EventTreeNodeEnterParent type
type _git_golaxy_org_core_ec_EventTreeNodeEnterParent struct {
	IValue                 interface{}
	WOnTreeNodeEnterParent func(self ec.Entity, parent ec.Entity)
}

func (W _git_golaxy_org_core_ec_EventTreeNodeEnterParent) OnTreeNodeEnterParent(self ec.Entity, parent ec.Entity) {
	W.WOnTreeNodeEnterParent(self, parent)
}

// _git_golaxy_org_core_ec_EventTreeNodeLeaveParent is an interface wrapper for EventTreeNodeLeaveParent type
type _git_golaxy_org_core_ec_EventTreeNodeLeaveParent struct {
	IValue                 interface{}
	WOnTreeNodeLeaveParent func(self ec.Entity, parent ec.Entity)
}

func (W _git_golaxy_org_core_ec_EventTreeNodeLeaveParent) OnTreeNodeLeaveParent(self ec.Entity, parent ec.Entity) {
	W.WOnTreeNodeLeaveParent(self, parent)
}

// _git_golaxy_org_core_ec_EventTreeNodeRemoveChild is an interface wrapper for EventTreeNodeRemoveChild type
type _git_golaxy_org_core_ec_EventTreeNodeRemoveChild struct {
	IValue                 interface{}
	WOnTreeNodeRemoveChild func(self ec.Entity, child ec.Entity)
}

func (W _git_golaxy_org_core_ec_EventTreeNodeRemoveChild) OnTreeNodeRemoveChild(self ec.Entity, child ec.Entity) {
	W.WOnTreeNodeRemoveChild(self, child)
}

// _git_golaxy_org_core_ec_IComponentEventTab is an interface wrapper for IComponentEventTab type
type _git_golaxy_org_core_ec_IComponentEventTab struct {
	IValue                       interface{}
	WEventComponentDestroySelf   func() event.IEvent
	WEventComponentEnableChanged func() event.IEvent
}

func (W _git_golaxy_org_core_ec_IComponentEventTab) EventComponentDestroySelf() event.IEvent {
	return W.WEventComponentDestroySelf()
}
func (W _git_golaxy_org_core_ec_IComponentEventTab) EventComponentEnableChanged() event.IEvent {
	return W.WEventComponentEnableChanged()
}

// _git_golaxy_org_core_ec_IEntityComponentManagerEventTab is an interface wrapper for IEntityComponentManagerEventTab type
type _git_golaxy_org_core_ec_IEntityComponentManagerEventTab struct {
	IValue                                    interface{}
	WEventComponentManagerAddComponents       func() event.IEvent
	WEventComponentManagerFirstTouchComponent func() event.IEvent
	WEventComponentManagerRemoveComponent     func() event.IEvent
}

func (W _git_golaxy_org_core_ec_IEntityComponentManagerEventTab) EventComponentManagerAddComponents() event.IEvent {
	return W.WEventComponentManagerAddComponents()
}
func (W _git_golaxy_org_core_ec_IEntityComponentManagerEventTab) EventComponentManagerFirstTouchComponent() event.IEvent {
	return W.WEventComponentManagerFirstTouchComponent()
}
func (W _git_golaxy_org_core_ec_IEntityComponentManagerEventTab) EventComponentManagerRemoveComponent() event.IEvent {
	return W.WEventComponentManagerRemoveComponent()
}

// _git_golaxy_org_core_ec_IEntityEventTab is an interface wrapper for IEntityEventTab type
type _git_golaxy_org_core_ec_IEntityEventTab struct {
	IValue                  interface{}
	WEventEntityDestroySelf func() event.IEvent
}

func (W _git_golaxy_org_core_ec_IEntityEventTab) EventEntityDestroySelf() event.IEvent {
	return W.WEventEntityDestroySelf()
}

// _git_golaxy_org_core_ec_IEntityTreeNodeEventTab is an interface wrapper for IEntityTreeNodeEventTab type
type _git_golaxy_org_core_ec_IEntityTreeNodeEventTab struct {
	IValue                    interface{}
	WEventTreeNodeAddChild    func() event.IEvent
	WEventTreeNodeEnterParent func() event.IEvent
	WEventTreeNodeLeaveParent func() event.IEvent
	WEventTreeNodeRemoveChild func() event.IEvent
}

func (W _git_golaxy_org_core_ec_IEntityTreeNodeEventTab) EventTreeNodeAddChild() event.IEvent {
	return W.WEventTreeNodeAddChild()
}
func (W _git_golaxy_org_core_ec_IEntityTreeNodeEventTab) EventTreeNodeEnterParent() event.IEvent {
	return W.WEventTreeNodeEnterParent()
}
func (W _git_golaxy_org_core_ec_IEntityTreeNodeEventTab) EventTreeNodeLeaveParent() event.IEvent {
	return W.WEventTreeNodeLeaveParent()
}
func (W _git_golaxy_org_core_ec_IEntityTreeNodeEventTab) EventTreeNodeRemoveChild() event.IEvent {
	return W.WEventTreeNodeRemoveChild()
}
