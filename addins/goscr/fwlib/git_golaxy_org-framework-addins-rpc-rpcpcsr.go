// Code generated by 'yaegi extract git.golaxy.org/framework/addins/rpc/rpcpcsr'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/core/service"
	"git.golaxy.org/core/utils/async"
	"git.golaxy.org/framework/addins/rpc/callpath"
	"git.golaxy.org/framework/addins/rpc/rpcpcsr"
	"git.golaxy.org/framework/addins/rpcstack"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/addins/rpc/rpcpcsr/rpcpcsr"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CallEntity":                      reflect.ValueOf(rpcpcsr.CallEntity),
		"CallRuntime":                     reflect.ValueOf(rpcpcsr.CallRuntime),
		"CallService":                     reflect.ValueOf(rpcpcsr.CallService),
		"ErrAddInInactive":                reflect.ValueOf(&rpcpcsr.ErrAddInInactive).Elem(),
		"ErrAddInNotFound":                reflect.ValueOf(&rpcpcsr.ErrAddInNotFound).Elem(),
		"ErrAsyncMethodReturnedNil":       reflect.ValueOf(&rpcpcsr.ErrAsyncMethodReturnedNil).Elem(),
		"ErrComponentNotFound":            reflect.ValueOf(&rpcpcsr.ErrComponentNotFound).Elem(),
		"ErrDistEntityNodeNotFound":       reflect.ValueOf(&rpcpcsr.ErrDistEntityNodeNotFound).Elem(),
		"ErrDistEntityNotFound":           reflect.ValueOf(&rpcpcsr.ErrDistEntityNotFound).Elem(),
		"ErrEntityNotFound":               reflect.ValueOf(&rpcpcsr.ErrEntityNotFound).Elem(),
		"ErrGroupChanIsFull":              reflect.ValueOf(&rpcpcsr.ErrGroupChanIsFull).Elem(),
		"ErrGroupNotFound":                reflect.ValueOf(&rpcpcsr.ErrGroupNotFound).Elem(),
		"ErrIncorrectDestAddress":         reflect.ValueOf(&rpcpcsr.ErrIncorrectDestAddress).Elem(),
		"ErrMethodNotFound":               reflect.ValueOf(&rpcpcsr.ErrMethodNotFound).Elem(),
		"ErrMethodParameterCountMismatch": reflect.ValueOf(&rpcpcsr.ErrMethodParameterCountMismatch).Elem(),
		"ErrMethodParameterTypeMismatch":  reflect.ValueOf(&rpcpcsr.ErrMethodParameterTypeMismatch).Elem(),
		"ErrPermissionDenied":             reflect.ValueOf(&rpcpcsr.ErrPermissionDenied).Elem(),
		"ErrSessionNotFound":              reflect.ValueOf(&rpcpcsr.ErrSessionNotFound).Elem(),
		"ErrTerminated":                   reflect.ValueOf(&rpcpcsr.ErrTerminated).Elem(),
		"ErrUndeliverable":                reflect.ValueOf(&rpcpcsr.ErrUndeliverable).Elem(),
		"NewForwardProcessor":             reflect.ValueOf(rpcpcsr.NewForwardProcessor),
		"NewGateProcessor":                reflect.ValueOf(rpcpcsr.NewGateProcessor),
		"NewServiceProcessor":             reflect.ValueOf(rpcpcsr.NewServiceProcessor),

		// type definitions
		"ICallee":             reflect.ValueOf((*rpcpcsr.ICallee)(nil)),
		"IDeliverer":          reflect.ValueOf((*rpcpcsr.IDeliverer)(nil)),
		"LifecycleInit":       reflect.ValueOf((*rpcpcsr.LifecycleInit)(nil)),
		"LifecycleShut":       reflect.ValueOf((*rpcpcsr.LifecycleShut)(nil)),
		"PermissionValidator": reflect.ValueOf((*rpcpcsr.PermissionValidator)(nil)),

		// interface wrapper definitions
		"_ICallee":       reflect.ValueOf((*_git_golaxy_org_framework_addins_rpc_rpcpcsr_ICallee)(nil)),
		"_IDeliverer":    reflect.ValueOf((*_git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer)(nil)),
		"_LifecycleInit": reflect.ValueOf((*_git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleInit)(nil)),
		"_LifecycleShut": reflect.ValueOf((*_git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleShut)(nil)),
	}
}

// _git_golaxy_org_framework_addins_rpc_rpcpcsr_ICallee is an interface wrapper for ICallee type
type _git_golaxy_org_framework_addins_rpc_rpcpcsr_ICallee struct {
	IValue  interface{}
	WCallee func(method string) reflect.Value
}

func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_ICallee) Callee(method string) reflect.Value {
	return W.WCallee(method)
}

// _git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer is an interface wrapper for IDeliverer type
type _git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer struct {
	IValue   interface{}
	WMatch   func(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, oneway bool) bool
	WNotify  func(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, args []any) error
	WRequest func(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, args []any) async.AsyncRet
}

func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer) Match(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, oneway bool) bool {
	return W.WMatch(svcCtx, dst, cc, cp, oneway)
}
func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer) Notify(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, args []any) error {
	return W.WNotify(svcCtx, dst, cc, cp, args)
}
func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_IDeliverer) Request(svcCtx service.Context, dst string, cc rpcstack.CallChain, cp callpath.CallPath, args []any) async.AsyncRet {
	return W.WRequest(svcCtx, dst, cc, cp, args)
}

// _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleInit is an interface wrapper for LifecycleInit type
type _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleInit struct {
	IValue interface{}
	WInit  func(svcCtx service.Context)
}

func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleInit) Init(svcCtx service.Context) {
	W.WInit(svcCtx)
}

// _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleShut is an interface wrapper for LifecycleShut type
type _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleShut struct {
	IValue interface{}
	WShut  func(svcCtx service.Context)
}

func (W _git_golaxy_org_framework_addins_rpc_rpcpcsr_LifecycleShut) Shut(svcCtx service.Context) {
	W.WShut(svcCtx)
}
