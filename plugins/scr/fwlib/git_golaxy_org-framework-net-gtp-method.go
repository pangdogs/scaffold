// Code generated by 'yaegi extract git.golaxy.org/framework/net/gtp/method'. DO NOT EDIT.

package fwlib

import (
	"crypto"
	"git.golaxy.org/framework/net/gtp/method"
	"io"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/net/gtp/method/method"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BrotliCompressionLevel":  reflect.ValueOf(&method.BrotliCompressionLevel).Elem(),
		"DeflateCompressionLevel": reflect.ValueOf(&method.DeflateCompressionLevel).Elem(),
		"ErrInvalidMethod":        reflect.ValueOf(&method.ErrInvalidMethod).Elem(),
		"GzipCompressionLevel":    reflect.ValueOf(&method.GzipCompressionLevel).Elem(),
		"LZ4CompressionLevel":     reflect.ValueOf(&method.LZ4CompressionLevel).Elem(),
		"NewBlock":                reflect.ValueOf(method.NewBlock),
		"NewBlockCipherMode":      reflect.ValueOf(method.NewBlockCipherMode),
		"NewCipher":               reflect.ValueOf(method.NewCipher),
		"NewCompressionStream":    reflect.ValueOf(method.NewCompressionStream),
		"NewHash":                 reflect.ValueOf(method.NewHash),
		"NewHash32":               reflect.ValueOf(method.NewHash32),
		"NewHash64":               reflect.ValueOf(method.NewHash64),
		"NewNamedCurve":           reflect.ValueOf(method.NewNamedCurve),
		"NewPadding":              reflect.ValueOf(method.NewPadding),
		"NewSigner":               reflect.ValueOf(method.NewSigner),

		// type definitions
		"Cipher":            reflect.ValueOf((*method.Cipher)(nil)),
		"CompressionStream": reflect.ValueOf((*method.CompressionStream)(nil)),
		"Padding":           reflect.ValueOf((*method.Padding)(nil)),
		"Signer":            reflect.ValueOf((*method.Signer)(nil)),

		// interface wrapper definitions
		"_Cipher":            reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_method_Cipher)(nil)),
		"_CompressionStream": reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_method_CompressionStream)(nil)),
		"_Padding":           reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_method_Padding)(nil)),
		"_Signer":            reflect.ValueOf((*_git_golaxy_org_framework_net_gtp_method_Signer)(nil)),
	}
}

// _git_golaxy_org_framework_net_gtp_method_Cipher is an interface wrapper for Cipher type
type _git_golaxy_org_framework_net_gtp_method_Cipher struct {
	IValue        interface{}
	WBlockSize    func() int
	WInputSize    func(size int) int
	WNonceSize    func() int
	WOutputSize   func(size int) int
	WOverhead     func() int
	WPad          func() bool
	WTransforming func(dst []byte, src []byte, nonce []byte) (int, error)
	WUnpad        func() bool
}

func (W _git_golaxy_org_framework_net_gtp_method_Cipher) BlockSize() int {
	return W.WBlockSize()
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) InputSize(size int) int {
	return W.WInputSize(size)
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) NonceSize() int {
	return W.WNonceSize()
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) OutputSize(size int) int {
	return W.WOutputSize(size)
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) Overhead() int {
	return W.WOverhead()
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) Pad() bool {
	return W.WPad()
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) Transforming(dst []byte, src []byte, nonce []byte) (int, error) {
	return W.WTransforming(dst, src, nonce)
}
func (W _git_golaxy_org_framework_net_gtp_method_Cipher) Unpad() bool {
	return W.WUnpad()
}

// _git_golaxy_org_framework_net_gtp_method_CompressionStream is an interface wrapper for CompressionStream type
type _git_golaxy_org_framework_net_gtp_method_CompressionStream struct {
	IValue      interface{}
	WWrapReader func(r io.Reader) (io.Reader, error)
	WWrapWriter func(w io.Writer) (io.WriteCloser, error)
}

func (W _git_golaxy_org_framework_net_gtp_method_CompressionStream) WrapReader(r io.Reader) (io.Reader, error) {
	return W.WWrapReader(r)
}
func (W _git_golaxy_org_framework_net_gtp_method_CompressionStream) WrapWriter(w io.Writer) (io.WriteCloser, error) {
	return W.WWrapWriter(w)
}

// _git_golaxy_org_framework_net_gtp_method_Padding is an interface wrapper for Padding type
type _git_golaxy_org_framework_net_gtp_method_Padding struct {
	IValue interface{}
	WPad   func(buf []byte, ori int) error
	WUnpad func(padded []byte) ([]byte, error)
}

func (W _git_golaxy_org_framework_net_gtp_method_Padding) Pad(buf []byte, ori int) error {
	return W.WPad(buf, ori)
}
func (W _git_golaxy_org_framework_net_gtp_method_Padding) Unpad(padded []byte) ([]byte, error) {
	return W.WUnpad(padded)
}

// _git_golaxy_org_framework_net_gtp_method_Signer is an interface wrapper for Signer type
type _git_golaxy_org_framework_net_gtp_method_Signer struct {
	IValue       interface{}
	WGenerateKey func() (crypto.PrivateKey, error)
	WSign        func(priv crypto.PrivateKey, data []byte) ([]byte, error)
	WVerify      func(pub crypto.PublicKey, data []byte, sig []byte) error
}

func (W _git_golaxy_org_framework_net_gtp_method_Signer) GenerateKey() (crypto.PrivateKey, error) {
	return W.WGenerateKey()
}
func (W _git_golaxy_org_framework_net_gtp_method_Signer) Sign(priv crypto.PrivateKey, data []byte) ([]byte, error) {
	return W.WSign(priv, data)
}
func (W _git_golaxy_org_framework_net_gtp_method_Signer) Verify(pub crypto.PublicKey, data []byte, sig []byte) error {
	return W.WVerify(pub, data, sig)
}
