// Code generated by 'yaegi extract git.golaxy.org/scaffold/plugins/acl'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/scaffold/plugins/acl"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/scaffold/plugins/acl/acl"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Install":   reflect.ValueOf(&acl.Install).Elem(),
		"Name":      reflect.ValueOf(&acl.Name).Elem(),
		"Uninstall": reflect.ValueOf(&acl.Uninstall).Elem(),
		"Using":     reflect.ValueOf(&acl.Using).Elem(),

		// type definitions
		"IACL": reflect.ValueOf((*acl.IACL)(nil)),

		// interface wrapper definitions
		"_IACL": reflect.ValueOf((*_git_golaxy_org_scaffold_plugins_acl_IACL)(nil)),
	}
}

// _git_golaxy_org_scaffold_plugins_acl_IACL is an interface wrapper for IACL type
type _git_golaxy_org_scaffold_plugins_acl_IACL struct {
	IValue   interface{}
	WAllowed func(tag string, item string) bool
	WEnabled func(tag string) bool
}

func (W _git_golaxy_org_scaffold_plugins_acl_IACL) Allowed(tag string, item string) bool {
	return W.WAllowed(tag, item)
}
func (W _git_golaxy_org_scaffold_plugins_acl_IACL) Enabled(tag string) bool { return W.WEnabled(tag) }
