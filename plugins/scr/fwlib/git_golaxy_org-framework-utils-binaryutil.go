// Code generated by 'yaegi extract git.golaxy.org/framework/utils/binaryutil'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/framework/utils/binaryutil"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/utils/binaryutil/binaryutil"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BytesPool":             reflect.ValueOf(&binaryutil.BytesPool).Elem(),
		"CloneRecycleBytes":     reflect.ValueOf(binaryutil.CloneRecycleBytes),
		"ErrInvalidSeekPos":     reflect.ValueOf(&binaryutil.ErrInvalidSeekPos).Elem(),
		"ErrLimitReached":       reflect.ValueOf(&binaryutil.ErrLimitReached).Elem(),
		"MakeNonRecycleBytes":   reflect.ValueOf(binaryutil.MakeNonRecycleBytes),
		"MakeRecycleBytes":      reflect.ValueOf(binaryutil.MakeRecycleBytes),
		"NewBigEndianStream":    reflect.ValueOf(binaryutil.NewBigEndianStream),
		"NewByteStream":         reflect.ValueOf(binaryutil.NewByteStream),
		"NewBytesWriter":        reflect.ValueOf(binaryutil.NewBytesWriter),
		"NewLimitWriter":        reflect.ValueOf(binaryutil.NewLimitWriter),
		"NewLittleEndianStream": reflect.ValueOf(binaryutil.NewLittleEndianStream),
		"NilRecycleBytes":       reflect.ValueOf(&binaryutil.NilRecycleBytes).Elem(),
		"SizeofBool":            reflect.ValueOf(binaryutil.SizeofBool),
		"SizeofByte":            reflect.ValueOf(binaryutil.SizeofByte),
		"SizeofBytes":           reflect.ValueOf(binaryutil.SizeofBytes),
		"SizeofBytes128":        reflect.ValueOf(binaryutil.SizeofBytes128),
		"SizeofBytes16":         reflect.ValueOf(binaryutil.SizeofBytes16),
		"SizeofBytes160":        reflect.ValueOf(binaryutil.SizeofBytes160),
		"SizeofBytes256":        reflect.ValueOf(binaryutil.SizeofBytes256),
		"SizeofBytes32":         reflect.ValueOf(binaryutil.SizeofBytes32),
		"SizeofBytes512":        reflect.ValueOf(binaryutil.SizeofBytes512),
		"SizeofBytes64":         reflect.ValueOf(binaryutil.SizeofBytes64),
		"SizeofDouble":          reflect.ValueOf(binaryutil.SizeofDouble),
		"SizeofFloat":           reflect.ValueOf(binaryutil.SizeofFloat),
		"SizeofInt16":           reflect.ValueOf(binaryutil.SizeofInt16),
		"SizeofInt32":           reflect.ValueOf(binaryutil.SizeofInt32),
		"SizeofInt64":           reflect.ValueOf(binaryutil.SizeofInt64),
		"SizeofInt8":            reflect.ValueOf(binaryutil.SizeofInt8),
		"SizeofString":          reflect.ValueOf(binaryutil.SizeofString),
		"SizeofUint16":          reflect.ValueOf(binaryutil.SizeofUint16),
		"SizeofUint32":          reflect.ValueOf(binaryutil.SizeofUint32),
		"SizeofUint64":          reflect.ValueOf(binaryutil.SizeofUint64),
		"SizeofUint8":           reflect.ValueOf(binaryutil.SizeofUint8),
		"SizeofUvarint":         reflect.ValueOf(binaryutil.SizeofUvarint),
		"SizeofVarint":          reflect.ValueOf(binaryutil.SizeofVarint),

		// type definitions
		"ByteStream":   reflect.ValueOf((*binaryutil.ByteStream)(nil)),
		"BytesWriter":  reflect.ValueOf((*binaryutil.BytesWriter)(nil)),
		"LimitWriter":  reflect.ValueOf((*binaryutil.LimitWriter)(nil)),
		"RecycleBytes": reflect.ValueOf((*binaryutil.RecycleBytes)(nil)),
	}
}
