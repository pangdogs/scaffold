// Code generated by 'yaegi extract git.golaxy.org/framework/plugins/log'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/framework/plugins/log"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/plugins/log/log"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DPanic":      reflect.ValueOf(log.DPanic),
		"DPanicLevel": reflect.ValueOf(log.DPanicLevel),
		"DPanicf":     reflect.ValueOf(log.DPanicf),
		"DPanicln":    reflect.ValueOf(log.DPanicln),
		"Debug":       reflect.ValueOf(log.Debug),
		"DebugLevel":  reflect.ValueOf(log.DebugLevel),
		"Debugf":      reflect.ValueOf(log.Debugf),
		"Debugln":     reflect.ValueOf(log.Debugln),
		"Error":       reflect.ValueOf(log.Error),
		"ErrorLevel":  reflect.ValueOf(log.ErrorLevel),
		"Errorf":      reflect.ValueOf(log.Errorf),
		"Errorln":     reflect.ValueOf(log.Errorln),
		"Fatal":       reflect.ValueOf(logFatal),
		"FatalLevel":  reflect.ValueOf(log.FatalLevel),
		"Fatalf":      reflect.ValueOf(logFatalf),
		"Fatalln":     reflect.ValueOf(logFatalln),
		"Info":        reflect.ValueOf(log.Info),
		"InfoLevel":   reflect.ValueOf(log.InfoLevel),
		"Infof":       reflect.ValueOf(log.Infof),
		"Infoln":      reflect.ValueOf(log.Infoln),
		"Name":        reflect.ValueOf(&log.Name).Elem(),
		"Panic":       reflect.ValueOf(log.Panic),
		"PanicLevel":  reflect.ValueOf(log.PanicLevel),
		"Panicf":      reflect.ValueOf(log.Panicf),
		"Panicln":     reflect.ValueOf(log.Panicln),
		"Trace":       reflect.ValueOf(log.Trace),
		"TraceLevel":  reflect.ValueOf(log.TraceLevel),
		"Tracef":      reflect.ValueOf(log.Tracef),
		"Traceln":     reflect.ValueOf(log.Traceln),
		"Using":       reflect.ValueOf(&log.Using).Elem(),
		"Warn":        reflect.ValueOf(log.Warn),
		"WarnLevel":   reflect.ValueOf(log.WarnLevel),
		"Warnf":       reflect.ValueOf(log.Warnf),
		"Warnln":      reflect.ValueOf(log.Warnln),

		// type definitions
		"ILogger": reflect.ValueOf((*log.ILogger)(nil)),
		"Level":   reflect.ValueOf((*log.Level)(nil)),

		// interface wrapper definitions
		"_ILogger": reflect.ValueOf((*_git_golaxy_org_framework_plugins_log_ILogger)(nil)),
	}
}

// _git_golaxy_org_framework_plugins_log_ILogger is an interface wrapper for ILogger type
type _git_golaxy_org_framework_plugins_log_ILogger struct {
	IValue interface{}
	WLog   func(level log.Level, v ...interface{})
	WLogf  func(level log.Level, format string, v ...interface{})
	WLogln func(level log.Level, v ...interface{})
}

func (W _git_golaxy_org_framework_plugins_log_ILogger) Log(level log.Level, v ...interface{}) {
	W.WLog(level, v...)
}
func (W _git_golaxy_org_framework_plugins_log_ILogger) Logf(level log.Level, format string, v ...interface{}) {
	W.WLogf(level, format, v...)
}
func (W _git_golaxy_org_framework_plugins_log_ILogger) Logln(level log.Level, v ...interface{}) {
	W.WLogln(level, v...)
}
