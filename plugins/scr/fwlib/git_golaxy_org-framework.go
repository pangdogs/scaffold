// Code generated by 'yaegi extract git.golaxy.org/framework'. DO NOT EDIT.

package fwlib

import (
	"context"
	"git.golaxy.org/core"
	"git.golaxy.org/core/ec"
	"git.golaxy.org/core/ec/pt"
	"git.golaxy.org/core/event"
	"git.golaxy.org/core/extension"
	"git.golaxy.org/core/runtime"
	"git.golaxy.org/core/service"
	"git.golaxy.org/core/utils/async"
	"git.golaxy.org/core/utils/generic"
	"git.golaxy.org/core/utils/iface"
	"git.golaxy.org/core/utils/uid"
	"git.golaxy.org/framework"
	"git.golaxy.org/framework/plugins/broker"
	"git.golaxy.org/framework/plugins/conf"
	"git.golaxy.org/framework/plugins/dentq"
	"git.golaxy.org/framework/plugins/dentr"
	"git.golaxy.org/framework/plugins/discovery"
	"git.golaxy.org/framework/plugins/dsvc"
	"git.golaxy.org/framework/plugins/dsync"
	"git.golaxy.org/framework/plugins/rpc"
	"git.golaxy.org/framework/plugins/rpcstack"
	"github.com/spf13/viper"
	"reflect"
	"sync"
	"time"
)

func init() {
	Symbols["git.golaxy.org/framework/framework"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CreateConcurrentEntity": reflect.ValueOf(framework.CreateConcurrentEntity),
		"CreateEntityPT":         reflect.ValueOf(&framework.CreateEntityPT).Elem(),
		"CreateRuntime":          reflect.ValueOf(framework.CreateRuntime),
		"ErrComponentNotAlive":   reflect.ValueOf(&framework.ErrComponentNotAlive).Elem(),
		"ErrEntityNotAlive":      reflect.ValueOf(&framework.ErrEntityNotAlive).Elem(),
		"ErrFramework":           reflect.ValueOf(&framework.ErrFramework).Elem(),
		"GetRuntimeInstance":     reflect.ValueOf(framework.GetRuntimeInstance),
		"GetServiceInstance":     reflect.ValueOf(framework.GetServiceInstance),
		"NewApp":                 reflect.ValueOf(framework.NewApp),

		// type definitions
		"App":                              reflect.ValueOf((*framework.App)(nil)),
		"AwaitDirector":                    reflect.ValueOf((*framework.AwaitDirector)(nil)),
		"ComponentBehavior":                reflect.ValueOf((*framework.ComponentBehavior)(nil)),
		"ConcurrentEntityCreator":          reflect.ValueOf((*framework.ConcurrentEntityCreator)(nil)),
		"EntityBehavior":                   reflect.ValueOf((*framework.EntityBehavior)(nil)),
		"EntityPTCreator":                  reflect.ValueOf((*framework.EntityPTCreator)(nil)),
		"IRuntimeInstance":                 reflect.ValueOf((*framework.IRuntimeInstance)(nil)),
		"IRuntimeInstantiation":            reflect.ValueOf((*framework.IRuntimeInstantiation)(nil)),
		"IServiceInstance":                 reflect.ValueOf((*framework.IServiceInstance)(nil)),
		"IServiceInstantiation":            reflect.ValueOf((*framework.IServiceInstantiation)(nil)),
		"InstallRuntimeDistEntityRegistry": reflect.ValueOf((*framework.InstallRuntimeDistEntityRegistry)(nil)),
		"InstallRuntimeLogger":             reflect.ValueOf((*framework.InstallRuntimeLogger)(nil)),
		"InstallRuntimeRPCStack":           reflect.ValueOf((*framework.InstallRuntimeRPCStack)(nil)),
		"InstallServiceBroker":             reflect.ValueOf((*framework.InstallServiceBroker)(nil)),
		"InstallServiceConfig":             reflect.ValueOf((*framework.InstallServiceConfig)(nil)),
		"InstallServiceDistEntityQuerier":  reflect.ValueOf((*framework.InstallServiceDistEntityQuerier)(nil)),
		"InstallServiceDistService":        reflect.ValueOf((*framework.InstallServiceDistService)(nil)),
		"InstallServiceDistSync":           reflect.ValueOf((*framework.InstallServiceDistSync)(nil)),
		"InstallServiceLogger":             reflect.ValueOf((*framework.InstallServiceLogger)(nil)),
		"InstallServiceRPC":                reflect.ValueOf((*framework.InstallServiceRPC)(nil)),
		"InstallServiceRegistry":           reflect.ValueOf((*framework.InstallServiceRegistry)(nil)),
		"LifecycleRuntimeBirth":            reflect.ValueOf((*framework.LifecycleRuntimeBirth)(nil)),
		"LifecycleRuntimeBuilt":            reflect.ValueOf((*framework.LifecycleRuntimeBuilt)(nil)),
		"LifecycleRuntimeFrameLoopBegin":   reflect.ValueOf((*framework.LifecycleRuntimeFrameLoopBegin)(nil)),
		"LifecycleRuntimeFrameLoopEnd":     reflect.ValueOf((*framework.LifecycleRuntimeFrameLoopEnd)(nil)),
		"LifecycleRuntimeFrameUpdateBegin": reflect.ValueOf((*framework.LifecycleRuntimeFrameUpdateBegin)(nil)),
		"LifecycleRuntimeFrameUpdateEnd":   reflect.ValueOf((*framework.LifecycleRuntimeFrameUpdateEnd)(nil)),
		"LifecycleRuntimeRunCallBegin":     reflect.ValueOf((*framework.LifecycleRuntimeRunCallBegin)(nil)),
		"LifecycleRuntimeRunCallEnd":       reflect.ValueOf((*framework.LifecycleRuntimeRunCallEnd)(nil)),
		"LifecycleRuntimeRunGCBegin":       reflect.ValueOf((*framework.LifecycleRuntimeRunGCBegin)(nil)),
		"LifecycleRuntimeRunGCEnd":         reflect.ValueOf((*framework.LifecycleRuntimeRunGCEnd)(nil)),
		"LifecycleRuntimeStarted":          reflect.ValueOf((*framework.LifecycleRuntimeStarted)(nil)),
		"LifecycleRuntimeStarting":         reflect.ValueOf((*framework.LifecycleRuntimeStarting)(nil)),
		"LifecycleRuntimeTerminated":       reflect.ValueOf((*framework.LifecycleRuntimeTerminated)(nil)),
		"LifecycleRuntimeTerminating":      reflect.ValueOf((*framework.LifecycleRuntimeTerminating)(nil)),
		"LifecycleServiceBirth":            reflect.ValueOf((*framework.LifecycleServiceBirth)(nil)),
		"LifecycleServiceBuilt":            reflect.ValueOf((*framework.LifecycleServiceBuilt)(nil)),
		"LifecycleServiceStarted":          reflect.ValueOf((*framework.LifecycleServiceStarted)(nil)),
		"LifecycleServiceStarting":         reflect.ValueOf((*framework.LifecycleServiceStarting)(nil)),
		"LifecycleServiceTerminated":       reflect.ValueOf((*framework.LifecycleServiceTerminated)(nil)),
		"LifecycleServiceTerminating":      reflect.ValueOf((*framework.LifecycleServiceTerminating)(nil)),
		"RuntimeCreator":                   reflect.ValueOf((*framework.RuntimeCreator)(nil)),
		"RuntimeGeneric":                   reflect.ValueOf((*framework.RuntimeGeneric)(nil)),
		"RuntimeInstance":                  reflect.ValueOf((*framework.RuntimeInstance)(nil)),
		"ServiceGeneric":                   reflect.ValueOf((*framework.ServiceGeneric)(nil)),
		"ServiceInstance":                  reflect.ValueOf((*framework.ServiceInstance)(nil)),

		// interface wrapper definitions
		"_IRuntimeInstance":                 reflect.ValueOf((*_git_golaxy_org_framework_IRuntimeInstance)(nil)),
		"_IRuntimeInstantiation":            reflect.ValueOf((*_git_golaxy_org_framework_IRuntimeInstantiation)(nil)),
		"_IServiceInstance":                 reflect.ValueOf((*_git_golaxy_org_framework_IServiceInstance)(nil)),
		"_IServiceInstantiation":            reflect.ValueOf((*_git_golaxy_org_framework_IServiceInstantiation)(nil)),
		"_InstallRuntimeDistEntityRegistry": reflect.ValueOf((*_git_golaxy_org_framework_InstallRuntimeDistEntityRegistry)(nil)),
		"_InstallRuntimeLogger":             reflect.ValueOf((*_git_golaxy_org_framework_InstallRuntimeLogger)(nil)),
		"_InstallRuntimeRPCStack":           reflect.ValueOf((*_git_golaxy_org_framework_InstallRuntimeRPCStack)(nil)),
		"_InstallServiceBroker":             reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceBroker)(nil)),
		"_InstallServiceConfig":             reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceConfig)(nil)),
		"_InstallServiceDistEntityQuerier":  reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceDistEntityQuerier)(nil)),
		"_InstallServiceDistService":        reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceDistService)(nil)),
		"_InstallServiceDistSync":           reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceDistSync)(nil)),
		"_InstallServiceLogger":             reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceLogger)(nil)),
		"_InstallServiceRPC":                reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceRPC)(nil)),
		"_InstallServiceRegistry":           reflect.ValueOf((*_git_golaxy_org_framework_InstallServiceRegistry)(nil)),
		"_LifecycleRuntimeBirth":            reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeBirth)(nil)),
		"_LifecycleRuntimeBuilt":            reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeBuilt)(nil)),
		"_LifecycleRuntimeFrameLoopBegin":   reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeFrameLoopBegin)(nil)),
		"_LifecycleRuntimeFrameLoopEnd":     reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeFrameLoopEnd)(nil)),
		"_LifecycleRuntimeFrameUpdateBegin": reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeFrameUpdateBegin)(nil)),
		"_LifecycleRuntimeFrameUpdateEnd":   reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeFrameUpdateEnd)(nil)),
		"_LifecycleRuntimeRunCallBegin":     reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeRunCallBegin)(nil)),
		"_LifecycleRuntimeRunCallEnd":       reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeRunCallEnd)(nil)),
		"_LifecycleRuntimeRunGCBegin":       reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeRunGCBegin)(nil)),
		"_LifecycleRuntimeRunGCEnd":         reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeRunGCEnd)(nil)),
		"_LifecycleRuntimeStarted":          reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeStarted)(nil)),
		"_LifecycleRuntimeStarting":         reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeStarting)(nil)),
		"_LifecycleRuntimeTerminated":       reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeTerminated)(nil)),
		"_LifecycleRuntimeTerminating":      reflect.ValueOf((*_git_golaxy_org_framework_LifecycleRuntimeTerminating)(nil)),
		"_LifecycleServiceBirth":            reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceBirth)(nil)),
		"_LifecycleServiceBuilt":            reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceBuilt)(nil)),
		"_LifecycleServiceStarted":          reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceStarted)(nil)),
		"_LifecycleServiceStarting":         reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceStarting)(nil)),
		"_LifecycleServiceTerminated":       reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceTerminated)(nil)),
		"_LifecycleServiceTerminating":      reflect.ValueOf((*_git_golaxy_org_framework_LifecycleServiceTerminating)(nil)),
	}
}

// _git_golaxy_org_framework_IRuntimeInstance is an interface wrapper for IRuntimeInstance type
type _git_golaxy_org_framework_IRuntimeInstance struct {
	IValue                 interface{}
	WActivateEvent         func(event event.IEventCtrl, recursion event.EventRecursion)
	WCall                  func(fun generic.FuncVar0[any, async.Ret], args ...any) async.AsyncRet
	WCallDelegate          func(fun generic.DelegateFuncVar0[any, async.Ret], args ...any) async.AsyncRet
	WCallVoid              func(fun generic.ActionVar0[any], args ...any) async.AsyncRet
	WCallVoidDelegate      func(fun generic.DelegateActionVar0[any], args ...any) async.AsyncRet
	WCollectGC             func(gc runtime.GC)
	WCreateEntity          func(prototype string) core.EntityCreator
	WDeadline              func() (deadline time.Time, ok bool)
	WDone                  func() <-chan struct{}
	WErr                   func() error
	WGetAutoRecover        func() bool
	WGetConcurrentContext  func() iface.Cache
	WGetCurrentContext     func() iface.Cache
	WGetDistEntityRegistry func() dentr.IDistEntityRegistry
	WGetEntityMgr          func() runtime.EntityMgr
	WGetEntityTree         func() runtime.EntityTree
	WGetFrame              func() runtime.Frame
	WGetId                 func() uid.Id
	WGetInstanceFaceCache  func() iface.Cache
	WGetName               func() string
	WGetParentContext      func() context.Context
	WGetPluginBundle       func() extension.PluginBundle
	WGetRPCStack           func() rpcstack.IRPCStack
	WGetReflected          func() reflect.Value
	WGetReportError        func() chan error
	WGetService            func() framework.IServiceInstance
	WGetWaitGroup          func() *sync.WaitGroup
	WManagedHooks          func(hooks ...event.Hook)
	WString                func() string
	WTerminate             func() <-chan struct{}
	WTerminated            func() <-chan struct{}
	WValue                 func(key any) any
}

func (W _git_golaxy_org_framework_IRuntimeInstance) ActivateEvent(event event.IEventCtrl, recursion event.EventRecursion) {
	W.WActivateEvent(event, recursion)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Call(fun generic.FuncVar0[any, async.Ret], args ...any) async.AsyncRet {
	return W.WCall(fun, args...)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) CallDelegate(fun generic.DelegateFuncVar0[any, async.Ret], args ...any) async.AsyncRet {
	return W.WCallDelegate(fun, args...)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) CallVoid(fun generic.ActionVar0[any], args ...any) async.AsyncRet {
	return W.WCallVoid(fun, args...)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) CallVoidDelegate(fun generic.DelegateActionVar0[any], args ...any) async.AsyncRet {
	return W.WCallVoidDelegate(fun, args...)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) CollectGC(gc runtime.GC) { W.WCollectGC(gc) }
func (W _git_golaxy_org_framework_IRuntimeInstance) CreateEntity(prototype string) core.EntityCreator {
	return W.WCreateEntity(prototype)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Done() <-chan struct{} { return W.WDone() }
func (W _git_golaxy_org_framework_IRuntimeInstance) Err() error            { return W.WErr() }
func (W _git_golaxy_org_framework_IRuntimeInstance) GetAutoRecover() bool  { return W.WGetAutoRecover() }
func (W _git_golaxy_org_framework_IRuntimeInstance) GetConcurrentContext() iface.Cache {
	return W.WGetConcurrentContext()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetCurrentContext() iface.Cache {
	return W.WGetCurrentContext()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetDistEntityRegistry() dentr.IDistEntityRegistry {
	return W.WGetDistEntityRegistry()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetEntityMgr() runtime.EntityMgr {
	return W.WGetEntityMgr()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetEntityTree() runtime.EntityTree {
	return W.WGetEntityTree()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetFrame() runtime.Frame { return W.WGetFrame() }
func (W _git_golaxy_org_framework_IRuntimeInstance) GetId() uid.Id           { return W.WGetId() }
func (W _git_golaxy_org_framework_IRuntimeInstance) GetInstanceFaceCache() iface.Cache {
	return W.WGetInstanceFaceCache()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetName() string { return W.WGetName() }
func (W _git_golaxy_org_framework_IRuntimeInstance) GetParentContext() context.Context {
	return W.WGetParentContext()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetPluginBundle() extension.PluginBundle {
	return W.WGetPluginBundle()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetRPCStack() rpcstack.IRPCStack {
	return W.WGetRPCStack()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetReflected() reflect.Value {
	return W.WGetReflected()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetReportError() chan error {
	return W.WGetReportError()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetService() framework.IServiceInstance {
	return W.WGetService()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) GetWaitGroup() *sync.WaitGroup {
	return W.WGetWaitGroup()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) ManagedHooks(hooks ...event.Hook) {
	W.WManagedHooks(hooks...)
}
func (W _git_golaxy_org_framework_IRuntimeInstance) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Terminate() <-chan struct{} {
	return W.WTerminate()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Terminated() <-chan struct{} {
	return W.WTerminated()
}
func (W _git_golaxy_org_framework_IRuntimeInstance) Value(key any) any { return W.WValue(key) }

// _git_golaxy_org_framework_IRuntimeInstantiation is an interface wrapper for IRuntimeInstantiation type
type _git_golaxy_org_framework_IRuntimeInstantiation struct {
	IValue         interface{}
	WInstantiation func() framework.IRuntimeInstance
}

func (W _git_golaxy_org_framework_IRuntimeInstantiation) Instantiation() framework.IRuntimeInstance {
	return W.WInstantiation()
}

// _git_golaxy_org_framework_IServiceInstance is an interface wrapper for IServiceInstance type
type _git_golaxy_org_framework_IServiceInstance struct {
	IValue                  interface{}
	WCall                   func(entityId uid.Id, fun generic.FuncVar1[ec.Entity, any, async.Ret], args ...any) async.AsyncRet
	WCallDelegate           func(entityId uid.Id, fun generic.DelegateFuncVar1[ec.Entity, any, async.Ret], args ...any) async.AsyncRet
	WCallVoid               func(entityId uid.Id, fun generic.ActionVar1[ec.Entity, any], args ...any) async.AsyncRet
	WCallVoidDelegate       func(entityId uid.Id, fun generic.DelegateActionVar1[ec.Entity, any], args ...any) async.AsyncRet
	WCreateConcurrentEntity func(prototype string) framework.ConcurrentEntityCreator
	WCreateEntityPT         func(prototype string) core.EntityPTCreator
	WCreateRuntime          func() framework.RuntimeCreator
	WDeadline               func() (deadline time.Time, ok bool)
	WDone                   func() <-chan struct{}
	WErr                    func() error
	WGetAutoRecover         func() bool
	WGetBroker              func() broker.IBroker
	WGetConf                func() conf.IConfig
	WGetDistEntityQuerier   func() dentq.IDistEntityQuerier
	WGetDistService         func() dsvc.IDistService
	WGetDistSync            func() dsync.IDistSync
	WGetEntityLib           func() pt.EntityLib
	WGetEntityMgr           func() service.EntityMgr
	WGetId                  func() uid.Id
	WGetInstanceFaceCache   func() iface.Cache
	WGetMemKV               func() *sync.Map
	WGetName                func() string
	WGetParentContext       func() context.Context
	WGetPluginBundle        func() extension.PluginBundle
	WGetRPC                 func() rpc.IRPC
	WGetReflected           func() reflect.Value
	WGetRegistry            func() discovery.IRegistry
	WGetReportError         func() chan error
	WGetStartupConf         func() *viper.Viper
	WGetStartupNo           func() int
	WGetWaitGroup           func() *sync.WaitGroup
	WString                 func() string
	WTerminate              func() <-chan struct{}
	WTerminated             func() <-chan struct{}
	WValue                  func(key any) any
}

func (W _git_golaxy_org_framework_IServiceInstance) Call(entityId uid.Id, fun generic.FuncVar1[ec.Entity, any, async.Ret], args ...any) async.AsyncRet {
	return W.WCall(entityId, fun, args...)
}
func (W _git_golaxy_org_framework_IServiceInstance) CallDelegate(entityId uid.Id, fun generic.DelegateFuncVar1[ec.Entity, any, async.Ret], args ...any) async.AsyncRet {
	return W.WCallDelegate(entityId, fun, args...)
}
func (W _git_golaxy_org_framework_IServiceInstance) CallVoid(entityId uid.Id, fun generic.ActionVar1[ec.Entity, any], args ...any) async.AsyncRet {
	return W.WCallVoid(entityId, fun, args...)
}
func (W _git_golaxy_org_framework_IServiceInstance) CallVoidDelegate(entityId uid.Id, fun generic.DelegateActionVar1[ec.Entity, any], args ...any) async.AsyncRet {
	return W.WCallVoidDelegate(entityId, fun, args...)
}
func (W _git_golaxy_org_framework_IServiceInstance) CreateConcurrentEntity(prototype string) framework.ConcurrentEntityCreator {
	return W.WCreateConcurrentEntity(prototype)
}
func (W _git_golaxy_org_framework_IServiceInstance) CreateEntityPT(prototype string) core.EntityPTCreator {
	return W.WCreateEntityPT(prototype)
}
func (W _git_golaxy_org_framework_IServiceInstance) CreateRuntime() framework.RuntimeCreator {
	return W.WCreateRuntime()
}
func (W _git_golaxy_org_framework_IServiceInstance) Deadline() (deadline time.Time, ok bool) {
	return W.WDeadline()
}
func (W _git_golaxy_org_framework_IServiceInstance) Done() <-chan struct{}     { return W.WDone() }
func (W _git_golaxy_org_framework_IServiceInstance) Err() error                { return W.WErr() }
func (W _git_golaxy_org_framework_IServiceInstance) GetAutoRecover() bool      { return W.WGetAutoRecover() }
func (W _git_golaxy_org_framework_IServiceInstance) GetBroker() broker.IBroker { return W.WGetBroker() }
func (W _git_golaxy_org_framework_IServiceInstance) GetConf() conf.IConfig     { return W.WGetConf() }
func (W _git_golaxy_org_framework_IServiceInstance) GetDistEntityQuerier() dentq.IDistEntityQuerier {
	return W.WGetDistEntityQuerier()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetDistService() dsvc.IDistService {
	return W.WGetDistService()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetDistSync() dsync.IDistSync {
	return W.WGetDistSync()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetEntityLib() pt.EntityLib {
	return W.WGetEntityLib()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetEntityMgr() service.EntityMgr {
	return W.WGetEntityMgr()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetId() uid.Id { return W.WGetId() }
func (W _git_golaxy_org_framework_IServiceInstance) GetInstanceFaceCache() iface.Cache {
	return W.WGetInstanceFaceCache()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetMemKV() *sync.Map { return W.WGetMemKV() }
func (W _git_golaxy_org_framework_IServiceInstance) GetName() string     { return W.WGetName() }
func (W _git_golaxy_org_framework_IServiceInstance) GetParentContext() context.Context {
	return W.WGetParentContext()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetPluginBundle() extension.PluginBundle {
	return W.WGetPluginBundle()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetRPC() rpc.IRPC { return W.WGetRPC() }
func (W _git_golaxy_org_framework_IServiceInstance) GetReflected() reflect.Value {
	return W.WGetReflected()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetRegistry() discovery.IRegistry {
	return W.WGetRegistry()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetReportError() chan error {
	return W.WGetReportError()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetStartupConf() *viper.Viper {
	return W.WGetStartupConf()
}
func (W _git_golaxy_org_framework_IServiceInstance) GetStartupNo() int { return W.WGetStartupNo() }
func (W _git_golaxy_org_framework_IServiceInstance) GetWaitGroup() *sync.WaitGroup {
	return W.WGetWaitGroup()
}
func (W _git_golaxy_org_framework_IServiceInstance) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _git_golaxy_org_framework_IServiceInstance) Terminate() <-chan struct{} {
	return W.WTerminate()
}
func (W _git_golaxy_org_framework_IServiceInstance) Terminated() <-chan struct{} {
	return W.WTerminated()
}
func (W _git_golaxy_org_framework_IServiceInstance) Value(key any) any { return W.WValue(key) }

// _git_golaxy_org_framework_IServiceInstantiation is an interface wrapper for IServiceInstantiation type
type _git_golaxy_org_framework_IServiceInstantiation struct {
	IValue         interface{}
	WInstantiation func() framework.IServiceInstance
}

func (W _git_golaxy_org_framework_IServiceInstantiation) Instantiation() framework.IServiceInstance {
	return W.WInstantiation()
}

// _git_golaxy_org_framework_InstallRuntimeDistEntityRegistry is an interface wrapper for InstallRuntimeDistEntityRegistry type
type _git_golaxy_org_framework_InstallRuntimeDistEntityRegistry struct {
	IValue                     interface{}
	WInstallDistEntityRegistry func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_InstallRuntimeDistEntityRegistry) InstallDistEntityRegistry(inst framework.IRuntimeInstance) {
	W.WInstallDistEntityRegistry(inst)
}

// _git_golaxy_org_framework_InstallRuntimeLogger is an interface wrapper for InstallRuntimeLogger type
type _git_golaxy_org_framework_InstallRuntimeLogger struct {
	IValue         interface{}
	WInstallLogger func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_InstallRuntimeLogger) InstallLogger(inst framework.IRuntimeInstance) {
	W.WInstallLogger(inst)
}

// _git_golaxy_org_framework_InstallRuntimeRPCStack is an interface wrapper for InstallRuntimeRPCStack type
type _git_golaxy_org_framework_InstallRuntimeRPCStack struct {
	IValue           interface{}
	WInstallRPCStack func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_InstallRuntimeRPCStack) InstallRPCStack(inst framework.IRuntimeInstance) {
	W.WInstallRPCStack(inst)
}

// _git_golaxy_org_framework_InstallServiceBroker is an interface wrapper for InstallServiceBroker type
type _git_golaxy_org_framework_InstallServiceBroker struct {
	IValue         interface{}
	WInstallBroker func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceBroker) InstallBroker(inst framework.IServiceInstance) {
	W.WInstallBroker(inst)
}

// _git_golaxy_org_framework_InstallServiceConfig is an interface wrapper for InstallServiceConfig type
type _git_golaxy_org_framework_InstallServiceConfig struct {
	IValue         interface{}
	WInstallConfig func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceConfig) InstallConfig(inst framework.IServiceInstance) {
	W.WInstallConfig(inst)
}

// _git_golaxy_org_framework_InstallServiceDistEntityQuerier is an interface wrapper for InstallServiceDistEntityQuerier type
type _git_golaxy_org_framework_InstallServiceDistEntityQuerier struct {
	IValue                    interface{}
	WInstallDistEntityQuerier func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceDistEntityQuerier) InstallDistEntityQuerier(inst framework.IServiceInstance) {
	W.WInstallDistEntityQuerier(inst)
}

// _git_golaxy_org_framework_InstallServiceDistService is an interface wrapper for InstallServiceDistService type
type _git_golaxy_org_framework_InstallServiceDistService struct {
	IValue              interface{}
	WInstallDistService func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceDistService) InstallDistService(inst framework.IServiceInstance) {
	W.WInstallDistService(inst)
}

// _git_golaxy_org_framework_InstallServiceDistSync is an interface wrapper for InstallServiceDistSync type
type _git_golaxy_org_framework_InstallServiceDistSync struct {
	IValue           interface{}
	WInstallDistSync func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceDistSync) InstallDistSync(inst framework.IServiceInstance) {
	W.WInstallDistSync(inst)
}

// _git_golaxy_org_framework_InstallServiceLogger is an interface wrapper for InstallServiceLogger type
type _git_golaxy_org_framework_InstallServiceLogger struct {
	IValue         interface{}
	WInstallLogger func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceLogger) InstallLogger(inst framework.IServiceInstance) {
	W.WInstallLogger(inst)
}

// _git_golaxy_org_framework_InstallServiceRPC is an interface wrapper for InstallServiceRPC type
type _git_golaxy_org_framework_InstallServiceRPC struct {
	IValue      interface{}
	WInstallRPC func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceRPC) InstallRPC(inst framework.IServiceInstance) {
	W.WInstallRPC(inst)
}

// _git_golaxy_org_framework_InstallServiceRegistry is an interface wrapper for InstallServiceRegistry type
type _git_golaxy_org_framework_InstallServiceRegistry struct {
	IValue           interface{}
	WInstallRegistry func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_InstallServiceRegistry) InstallRegistry(inst framework.IServiceInstance) {
	W.WInstallRegistry(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeBirth is an interface wrapper for LifecycleRuntimeBirth type
type _git_golaxy_org_framework_LifecycleRuntimeBirth struct {
	IValue interface{}
	WBirth func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeBirth) Birth(inst framework.IRuntimeInstance) {
	W.WBirth(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeBuilt is an interface wrapper for LifecycleRuntimeBuilt type
type _git_golaxy_org_framework_LifecycleRuntimeBuilt struct {
	IValue interface{}
	WBuilt func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeBuilt) Built(inst framework.IRuntimeInstance) {
	W.WBuilt(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeFrameLoopBegin is an interface wrapper for LifecycleRuntimeFrameLoopBegin type
type _git_golaxy_org_framework_LifecycleRuntimeFrameLoopBegin struct {
	IValue          interface{}
	WFrameLoopBegin func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeFrameLoopBegin) FrameLoopBegin(inst framework.IRuntimeInstance) {
	W.WFrameLoopBegin(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeFrameLoopEnd is an interface wrapper for LifecycleRuntimeFrameLoopEnd type
type _git_golaxy_org_framework_LifecycleRuntimeFrameLoopEnd struct {
	IValue        interface{}
	WFrameLoopEnd func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeFrameLoopEnd) FrameLoopEnd(inst framework.IRuntimeInstance) {
	W.WFrameLoopEnd(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateBegin is an interface wrapper for LifecycleRuntimeFrameUpdateBegin type
type _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateBegin struct {
	IValue            interface{}
	WFrameUpdateBegin func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateBegin) FrameUpdateBegin(inst framework.IRuntimeInstance) {
	W.WFrameUpdateBegin(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateEnd is an interface wrapper for LifecycleRuntimeFrameUpdateEnd type
type _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateEnd struct {
	IValue          interface{}
	WFrameUpdateEnd func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeFrameUpdateEnd) FrameUpdateEnd(inst framework.IRuntimeInstance) {
	W.WFrameUpdateEnd(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeRunCallBegin is an interface wrapper for LifecycleRuntimeRunCallBegin type
type _git_golaxy_org_framework_LifecycleRuntimeRunCallBegin struct {
	IValue        interface{}
	WRunCallBegin func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeRunCallBegin) RunCallBegin(inst framework.IRuntimeInstance) {
	W.WRunCallBegin(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeRunCallEnd is an interface wrapper for LifecycleRuntimeRunCallEnd type
type _git_golaxy_org_framework_LifecycleRuntimeRunCallEnd struct {
	IValue      interface{}
	WRunCallEnd func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeRunCallEnd) RunCallEnd(inst framework.IRuntimeInstance) {
	W.WRunCallEnd(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeRunGCBegin is an interface wrapper for LifecycleRuntimeRunGCBegin type
type _git_golaxy_org_framework_LifecycleRuntimeRunGCBegin struct {
	IValue      interface{}
	WRunGCBegin func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeRunGCBegin) RunGCBegin(inst framework.IRuntimeInstance) {
	W.WRunGCBegin(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeRunGCEnd is an interface wrapper for LifecycleRuntimeRunGCEnd type
type _git_golaxy_org_framework_LifecycleRuntimeRunGCEnd struct {
	IValue    interface{}
	WRunGCEnd func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeRunGCEnd) RunGCEnd(inst framework.IRuntimeInstance) {
	W.WRunGCEnd(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeStarted is an interface wrapper for LifecycleRuntimeStarted type
type _git_golaxy_org_framework_LifecycleRuntimeStarted struct {
	IValue   interface{}
	WStarted func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeStarted) Started(inst framework.IRuntimeInstance) {
	W.WStarted(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeStarting is an interface wrapper for LifecycleRuntimeStarting type
type _git_golaxy_org_framework_LifecycleRuntimeStarting struct {
	IValue    interface{}
	WStarting func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeStarting) Starting(inst framework.IRuntimeInstance) {
	W.WStarting(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeTerminated is an interface wrapper for LifecycleRuntimeTerminated type
type _git_golaxy_org_framework_LifecycleRuntimeTerminated struct {
	IValue      interface{}
	WTerminated func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeTerminated) Terminated(inst framework.IRuntimeInstance) {
	W.WTerminated(inst)
}

// _git_golaxy_org_framework_LifecycleRuntimeTerminating is an interface wrapper for LifecycleRuntimeTerminating type
type _git_golaxy_org_framework_LifecycleRuntimeTerminating struct {
	IValue       interface{}
	WTerminating func(inst framework.IRuntimeInstance)
}

func (W _git_golaxy_org_framework_LifecycleRuntimeTerminating) Terminating(inst framework.IRuntimeInstance) {
	W.WTerminating(inst)
}

// _git_golaxy_org_framework_LifecycleServiceBirth is an interface wrapper for LifecycleServiceBirth type
type _git_golaxy_org_framework_LifecycleServiceBirth struct {
	IValue interface{}
	WBirth func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceBirth) Birth(inst framework.IServiceInstance) {
	W.WBirth(inst)
}

// _git_golaxy_org_framework_LifecycleServiceBuilt is an interface wrapper for LifecycleServiceBuilt type
type _git_golaxy_org_framework_LifecycleServiceBuilt struct {
	IValue interface{}
	WBuilt func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceBuilt) Built(inst framework.IServiceInstance) {
	W.WBuilt(inst)
}

// _git_golaxy_org_framework_LifecycleServiceStarted is an interface wrapper for LifecycleServiceStarted type
type _git_golaxy_org_framework_LifecycleServiceStarted struct {
	IValue   interface{}
	WStarted func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceStarted) Started(inst framework.IServiceInstance) {
	W.WStarted(inst)
}

// _git_golaxy_org_framework_LifecycleServiceStarting is an interface wrapper for LifecycleServiceStarting type
type _git_golaxy_org_framework_LifecycleServiceStarting struct {
	IValue    interface{}
	WStarting func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceStarting) Starting(inst framework.IServiceInstance) {
	W.WStarting(inst)
}

// _git_golaxy_org_framework_LifecycleServiceTerminated is an interface wrapper for LifecycleServiceTerminated type
type _git_golaxy_org_framework_LifecycleServiceTerminated struct {
	IValue      interface{}
	WTerminated func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceTerminated) Terminated(inst framework.IServiceInstance) {
	W.WTerminated(inst)
}

// _git_golaxy_org_framework_LifecycleServiceTerminating is an interface wrapper for LifecycleServiceTerminating type
type _git_golaxy_org_framework_LifecycleServiceTerminating struct {
	IValue       interface{}
	WTerminating func(inst framework.IServiceInstance)
}

func (W _git_golaxy_org_framework_LifecycleServiceTerminating) Terminating(inst framework.IServiceInstance) {
	W.WTerminating(inst)
}
