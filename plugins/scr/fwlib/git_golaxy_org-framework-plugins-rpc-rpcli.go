// Code generated by 'yaegi extract git.golaxy.org/framework/plugins/rpc/rpcli'. DO NOT EDIT.

package fwlib

import (
	"git.golaxy.org/framework/plugins/rpc/rpcli"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["git.golaxy.org/framework/plugins/rpc/rpcli/rpcli"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CreateRPCli":                     reflect.ValueOf(rpcli.CreateRPCli),
		"ErrMethodNotFound":               reflect.ValueOf(&rpcli.ErrMethodNotFound).Elem(),
		"ErrMethodParameterCountMismatch": reflect.ValueOf(&rpcli.ErrMethodParameterCountMismatch).Elem(),
		"ErrMethodParameterTypeMismatch":  reflect.ValueOf(&rpcli.ErrMethodParameterTypeMismatch).Elem(),
		"ErrProcedureExists":              reflect.ValueOf(&rpcli.ErrProcedureExists).Elem(),
		"ErrProcedureNotFound":            reflect.ValueOf(&rpcli.ErrProcedureNotFound).Elem(),
		"Main":                            reflect.ValueOf(constant.MakeFromLiteral("\"\"", token.STRING, 0)),

		// type definitions
		"IProcedure":   reflect.ValueOf((*rpcli.IProcedure)(nil)),
		"Procedure":    reflect.ValueOf((*rpcli.Procedure)(nil)),
		"RPCli":        reflect.ValueOf((*rpcli.RPCli)(nil)),
		"RPCliCreator": reflect.ValueOf((*rpcli.RPCliCreator)(nil)),

		// interface wrapper definitions
		"_IProcedure": reflect.ValueOf((*_git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure)(nil)),
	}
}

// _git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure is an interface wrapper for IProcedure type
type _git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure struct {
	IValue        interface{}
	WGetCli       func() *rpcli.RPCli
	WGetName      func() string
	WGetReflected func() reflect.Value
}

func (W _git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure) GetCli() *rpcli.RPCli {
	return W.WGetCli()
}
func (W _git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure) GetName() string {
	return W.WGetName()
}
func (W _git_golaxy_org_framework_plugins_rpc_rpcli_IProcedure) GetReflected() reflect.Value {
	return W.WGetReflected()
}
